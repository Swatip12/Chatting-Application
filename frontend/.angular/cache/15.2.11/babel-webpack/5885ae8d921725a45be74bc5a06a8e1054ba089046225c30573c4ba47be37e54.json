{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UserStatus } from '../../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/common\";\nfunction UserListComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function UserListComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.refreshUsers());\n    });\n    i0.ɵɵelement(1, \"i\", 15);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserListComponent_div_15_ng_container_5_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"i\", 32);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserListComponent_div_15_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵlistener(\"click\", function UserListComponent_div_15_ng_container_5_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const user_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.selectUser(user_r8));\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"div\", 23)(3, \"div\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"div\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 26)(7, \"div\", 27);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵelement(10, \"i\", 29);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, UserListComponent_div_15_ng_container_5_div_1_div_12_Template, 2, 0, \"div\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"active\", ctx_r9.isSelected(user_r8))(\"online\", ctx_r9.isOnline(user_r8));\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"online\", ctx_r9.isOnline(user_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.getUserInitial(user_r8.username), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"online\", ctx_r9.isOnline(user_r8));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r8.username);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.getStatusClass(user_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r9.getStatusIcon(user_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.getLastSeenText(user_r8), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.isSelected(user_r8));\n  }\n}\nfunction UserListComponent_div_15_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, UserListComponent_div_15_ng_container_5_div_1_Template, 13, 15, \"div\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isOnline(user_r8));\n  }\n}\nfunction UserListComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"small\", 18);\n    i0.ɵɵelement(3, \"i\", 19);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, UserListComponent_div_15_ng_container_5_Template, 2, 1, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Online (\", ctx_r1.getOnlineUsersCount(), \") \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.users)(\"ngForTrackBy\", ctx_r1.trackByUserId);\n  }\n}\nfunction UserListComponent_div_16_ng_container_5_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"i\", 32);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserListComponent_div_16_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵlistener(\"click\", function UserListComponent_div_16_ng_container_5_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const user_r16 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.selectUser(user_r16));\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"div\", 23)(3, \"div\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"div\", 36);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 26)(7, \"div\", 27);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵelement(10, \"i\", 29);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, UserListComponent_div_16_ng_container_5_div_1_div_12_Template, 2, 0, \"div\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r16 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"active\", ctx_r17.isSelected(user_r16))(\"offline\", !ctx_r17.isOnline(user_r16));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.getUserInitial(user_r16.username), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(user_r16.username);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r17.getStatusClass(user_r16));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r17.getStatusIcon(user_r16));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.getLastSeenText(user_r16), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.isSelected(user_r16));\n  }\n}\nfunction UserListComponent_div_16_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, UserListComponent_div_16_ng_container_5_div_1_Template, 13, 11, \"div\", 34);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.isOnline(user_r16));\n  }\n}\nfunction UserListComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"small\", 18);\n    i0.ɵɵelement(3, \"i\", 33);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, UserListComponent_div_16_ng_container_5_Template, 2, 1, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Offline (\", ctx_r2.users.length - ctx_r2.getOnlineUsersCount(), \") \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.users)(\"ngForTrackBy\", ctx_r2.trackByUserId);\n  }\n}\nfunction UserListComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\", 38);\n    i0.ɵɵelement(2, \"i\", 39);\n    i0.ɵɵelementStart(3, \"p\", 40);\n    i0.ɵɵtext(4, \"No users available\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function UserListComponent_div_17_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.refreshUsers());\n    });\n    i0.ɵɵelement(6, \"i\", 42);\n    i0.ɵɵtext(7, \" Refresh \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction UserListComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"div\", 38)(2, \"div\", 44)(3, \"span\", 45);\n    i0.ɵɵtext(4, \"Loading users...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\", 40);\n    i0.ɵɵtext(6, \"Loading users...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class UserListComponent {\n  constructor(chatService, authService) {\n    this.chatService = chatService;\n    this.authService = authService;\n    this.users = [];\n    this.selectedUser = null;\n    this.currentUser = null;\n    this.userSelected = new EventEmitter();\n    this.subscriptions = [];\n    this.connectionStatus = false;\n  }\n  ngOnInit() {\n    this.subscribeToUserUpdates();\n    this.subscribeToConnectionStatus();\n    this.loadUsers();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  subscribeToUserUpdates() {\n    const userStatusSub = this.chatService.subscribeToUserStatus().subscribe({\n      next: users => {\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\n      },\n      error: error => {\n        console.error('Error receiving user status updates:', error);\n      }\n    });\n    this.subscriptions.push(userStatusSub);\n  }\n  subscribeToConnectionStatus() {\n    const connectionSub = this.chatService.getConnectionStatus().subscribe({\n      next: status => {\n        this.connectionStatus = status;\n      }\n    });\n    this.subscriptions.push(connectionSub);\n  }\n  loadUsers() {\n    this.authService.getUsers().subscribe({\n      next: users => {\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\n      },\n      error: error => {\n        console.error('Error loading users:', error);\n      }\n    });\n  }\n  selectUser(user) {\n    this.userSelected.emit(user);\n  }\n  isOnline(user) {\n    return user.status === UserStatus.ONLINE;\n  }\n  getStatusClass(user) {\n    return this.isOnline(user) ? 'user-status-online' : 'user-status-offline';\n  }\n  getStatusIcon(user) {\n    return this.isOnline(user) ? 'fas fa-circle' : 'far fa-circle';\n  }\n  isSelected(user) {\n    return this.selectedUser?.id === user.id;\n  }\n  getUserInitial(username) {\n    return username.charAt(0).toUpperCase();\n  }\n  getLastSeenText(user) {\n    if (this.isOnline(user)) {\n      return 'Online';\n    }\n    if (!user.lastSeen) {\n      return 'Offline';\n    }\n    const lastSeen = new Date(user.lastSeen);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - lastSeen.getTime()) / (1000 * 60));\n    if (diffInMinutes < 1) {\n      return 'Just now';\n    } else if (diffInMinutes < 60) {\n      return `${diffInMinutes}m ago`;\n    } else if (diffInMinutes < 1440) {\n      // 24 hours\n      const hours = Math.floor(diffInMinutes / 60);\n      return `${hours}h ago`;\n    } else {\n      const days = Math.floor(diffInMinutes / 1440);\n      return `${days}d ago`;\n    }\n  }\n  refreshUsers() {\n    this.loadUsers();\n  }\n  getOnlineUsersCount() {\n    return this.users.filter(user => this.isOnline(user)).length;\n  }\n  getTotalUsersCount() {\n    return this.users.length;\n  }\n  trackByUserId(index, user) {\n    return user.id;\n  }\n  static {\n    this.ɵfac = function UserListComponent_Factory(t) {\n      return new (t || UserListComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserListComponent,\n      selectors: [[\"app-user-list\"]],\n      inputs: {\n        users: \"users\",\n        selectedUser: \"selectedUser\",\n        currentUser: \"currentUser\"\n      },\n      outputs: {\n        userSelected: \"userSelected\"\n      },\n      decls: 19,\n      vars: 12,\n      consts: [[1, \"user-list-container\"], [1, \"user-list-header\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"user-count-badge\"], [1, \"badge\", \"bg-primary\"], [1, \"connection-status\", \"mt-2\"], [1, \"d-flex\", \"align-items-center\"], [1, \"ms-2\"], [\"class\", \"btn btn-sm btn-outline-primary ms-auto\", \"title\", \"Refresh users\", 3, \"click\", 4, \"ngIf\"], [1, \"user-list-content\"], [\"class\", \"user-section\", 4, \"ngIf\"], [\"class\", \"empty-state\", 4, \"ngIf\"], [\"class\", \"loading-state\", 4, \"ngIf\"], [\"title\", \"Refresh users\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"ms-auto\", 3, \"click\"], [1, \"fas\", \"fa-sync-alt\"], [1, \"user-section\"], [1, \"section-header\"], [1, \"text-muted\", \"text-uppercase\", \"fw-bold\"], [1, \"fas\", \"fa-circle\", \"text-success\", \"me-1\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"user-item\", 3, \"active\", \"online\", \"click\", 4, \"ngIf\"], [1, \"user-item\", 3, \"click\"], [1, \"user-avatar\", \"me-3\"], [1, \"avatar-circle\"], [1, \"status-indicator\"], [1, \"user-info\", \"flex-grow-1\"], [1, \"user-name\"], [1, \"user-status\", 3, \"ngClass\"], [1, \"me-1\"], [\"class\", \"selection-indicator\", 4, \"ngIf\"], [1, \"selection-indicator\"], [1, \"fas\", \"fa-check-circle\", \"text-primary\"], [1, \"far\", \"fa-circle\", \"text-muted\", \"me-1\"], [\"class\", \"user-item\", 3, \"active\", \"offline\", \"click\", 4, \"ngIf\"], [1, \"avatar-circle\", \"offline\"], [1, \"status-indicator\", \"offline\"], [1, \"empty-state\"], [1, \"text-center\", \"py-4\"], [1, \"fas\", \"fa-users\", \"fa-2x\", \"text-muted\", \"mb-3\"], [1, \"text-muted\", \"mb-0\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"mt-2\", 3, \"click\"], [1, \"fas\", \"fa-sync-alt\", \"me-1\"], [1, \"loading-state\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"text-primary\", \"mb-2\"], [1, \"visually-hidden\"]],\n      template: function UserListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n          i0.ɵɵtext(4, \"Users\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\", 5);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n          i0.ɵɵelement(10, \"i\");\n          i0.ɵɵelementStart(11, \"small\", 8);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, UserListComponent_button_13_Template, 2, 0, \"button\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\", 10);\n          i0.ɵɵtemplate(15, UserListComponent_div_15_Template, 6, 3, \"div\", 11);\n          i0.ɵɵtemplate(16, UserListComponent_div_16_Template, 6, 3, \"div\", 11);\n          i0.ɵɵtemplate(17, UserListComponent_div_17_Template, 8, 0, \"div\", 12);\n          i0.ɵɵtemplate(18, UserListComponent_div_18_Template, 7, 0, \"div\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate2(\"\", ctx.getOnlineUsersCount(), \"/\", ctx.getTotalUsersCount(), \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassMap(ctx.connectionStatus ? \"fas fa-wifi text-success\" : \"fas fa-wifi-slash text-danger\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassMap(ctx.connectionStatus ? \"text-success\" : \"text-danger\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.connectionStatus ? \"Connected\" : \"Disconnected\", \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.connectionStatus);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.getOnlineUsersCount() > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.users.length - ctx.getOnlineUsersCount() > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.users.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.users.length === 0 && ctx.connectionStatus);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n      styles: [\".user-list-container[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);\\r\\n  backdrop-filter: blur(10px);\\r\\n}\\r\\n\\r\\n.user-list-header[_ngcontent-%COMP%] {\\r\\n  padding: 1.5rem;\\r\\n  border-bottom: 1px solid rgba(102, 126, 234, 0.1);\\r\\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0.1) 100%);\\r\\n  backdrop-filter: blur(15px);\\r\\n  flex-shrink: 0;\\r\\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.05);\\r\\n}\\r\\n\\r\\n.user-list-header[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\\r\\n  color: #2d3748;\\r\\n  font-weight: 700;\\r\\n  margin-bottom: 0.75rem;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n.user-list-header[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\r\\n  color: #667eea;\\r\\n  font-size: 1.1rem;\\r\\n}\\r\\n\\r\\n.user-count-badge[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%] {\\r\\n  font-size: 0.75rem;\\r\\n  background: linear-gradient(135deg, #667eea, #764ba2);\\r\\n  border: none;\\r\\n  padding: 0.4rem 0.8rem;\\r\\n  border-radius: 15px;\\r\\n  font-weight: 600;\\r\\n  box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);\\r\\n}\\r\\n\\r\\n.connection-status[_ngcontent-%COMP%] {\\r\\n  font-size: 0.875rem;\\r\\n  font-weight: 600;\\r\\n  padding: 0.5rem 1rem;\\r\\n  background: rgba(255, 255, 255, 0.1);\\r\\n  border-radius: 20px;\\r\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\r\\n  backdrop-filter: blur(10px);\\r\\n}\\r\\n\\r\\n.user-list-content[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  overflow-y: auto;\\r\\n  padding: 1rem 0;\\r\\n}\\r\\n\\r\\n.user-section[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 1.5rem;\\r\\n}\\r\\n\\r\\n.section-header[_ngcontent-%COMP%] {\\r\\n  padding: 0.75rem 1.5rem;\\r\\n  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);\\r\\n  border-bottom: 1px solid rgba(102, 126, 234, 0.1);\\r\\n  font-weight: 700;\\r\\n  color: #667eea;\\r\\n  text-transform: uppercase;\\r\\n  font-size: 0.8rem;\\r\\n  letter-spacing: 0.5px;\\r\\n}\\r\\n\\r\\n.user-item[_ngcontent-%COMP%] {\\r\\n  padding: 0.75rem 1rem;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.2s ease;\\r\\n  border-left: 3px solid transparent;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.user-item[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n.user-item.active[_ngcontent-%COMP%] {\\r\\n  background-color: #e3f2fd;\\r\\n  border-left-color: #007bff;\\r\\n}\\r\\n\\r\\n.user-item.online[_ngcontent-%COMP%] {\\r\\n  border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.user-item.online[_ngcontent-%COMP%]:hover {\\r\\n  border-left-color: #28a745;\\r\\n}\\r\\n\\r\\n.user-item.offline[_ngcontent-%COMP%] {\\r\\n  opacity: 0.7;\\r\\n}\\r\\n\\r\\n.user-avatar[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  flex-shrink: 0;\\r\\n}\\r\\n\\r\\n.avatar-circle[_ngcontent-%COMP%] {\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  border-radius: 50%;\\r\\n  background: linear-gradient(135deg, #007bff, #0056b3);\\r\\n  color: white;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-weight: bold;\\r\\n  font-size: 16px;\\r\\n  position: relative;\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n\\r\\n.avatar-circle.offline[_ngcontent-%COMP%] {\\r\\n  background: linear-gradient(135deg, #6c757d, #495057);\\r\\n}\\r\\n\\r\\n.avatar-circle.online[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 0 0 2px #28a745;\\r\\n}\\r\\n\\r\\n.status-indicator[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  bottom: -2px;\\r\\n  right: -2px;\\r\\n  width: 12px;\\r\\n  height: 12px;\\r\\n  border-radius: 50%;\\r\\n  border: 2px solid #ffffff;\\r\\n  background-color: #6c757d;\\r\\n  transition: background-color 0.2s ease;\\r\\n}\\r\\n\\r\\n.status-indicator.online[_ngcontent-%COMP%] {\\r\\n  background-color: #28a745;\\r\\n  animation: _ngcontent-%COMP%_pulse 2s infinite;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_pulse {\\r\\n  0% {\\r\\n    box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7);\\r\\n  }\\r\\n  70% {\\r\\n    box-shadow: 0 0 0 6px rgba(40, 167, 69, 0);\\r\\n  }\\r\\n  100% {\\r\\n    box-shadow: 0 0 0 0 rgba(40, 167, 69, 0);\\r\\n  }\\r\\n}\\r\\n\\r\\n.user-info[_ngcontent-%COMP%] {\\r\\n  min-width: 0; \\r\\n}\\r\\n\\r\\n.user-name[_ngcontent-%COMP%] {\\r\\n  font-weight: 500;\\r\\n  color: #333;\\r\\n  margin-bottom: 0.25rem;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.user-status[_ngcontent-%COMP%] {\\r\\n  font-size: 0.875rem;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.user-status-online[_ngcontent-%COMP%] {\\r\\n  color: #28a745;\\r\\n}\\r\\n\\r\\n.user-status-offline[_ngcontent-%COMP%] {\\r\\n  color: #6c757d;\\r\\n}\\r\\n\\r\\n.selection-indicator[_ngcontent-%COMP%] {\\r\\n  flex-shrink: 0;\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.empty-state[_ngcontent-%COMP%], .loading-state[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n.user-list-content[_ngcontent-%COMP%]::-webkit-scrollbar {\\r\\n  width: 6px;\\r\\n}\\r\\n\\r\\n.user-list-content[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\n.user-list-content[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\r\\n  background: #c1c1c1;\\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n.user-list-content[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\r\\n  background: #a8a8a8;\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .user-list-header[_ngcontent-%COMP%] {\\r\\n    padding: 0.75rem;\\r\\n  }\\r\\n  \\r\\n  .user-item[_ngcontent-%COMP%] {\\r\\n    padding: 0.6rem 0.75rem;\\r\\n  }\\r\\n  \\r\\n  .avatar-circle[_ngcontent-%COMP%] {\\r\\n    width: 36px;\\r\\n    height: 36px;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .status-indicator[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.user-item[_ngcontent-%COMP%] {\\r\\n  animation: _ngcontent-%COMP%_slideIn 0.3s ease-out;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_slideIn {\\r\\n  from {\\r\\n    opacity: 0;\\r\\n    transform: translateX(-20px);\\r\\n  }\\r\\n  to {\\r\\n    opacity: 1;\\r\\n    transform: translateX(0);\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.user-item.active[_ngcontent-%COMP%]   .avatar-circle[_ngcontent-%COMP%] {\\r\\n  transform: scale(1.05);\\r\\n  box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);\\r\\n}\\r\\n\\r\\n\\r\\n.connection-status[_ngcontent-%COMP%]   .fas.fa-wifi[_ngcontent-%COMP%] {\\r\\n  animation: none;\\r\\n}\\r\\n\\r\\n.connection-status[_ngcontent-%COMP%]   .fas.fa-wifi-slash[_ngcontent-%COMP%] {\\r\\n  animation: _ngcontent-%COMP%_blink 1s infinite;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_blink {\\r\\n  0%, 50% { opacity: 1; }\\r\\n  51%, 100% { opacity: 0.5; }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","UserStatus","i0","UserListComponent","constructor","chatService","authService","ngOnInit","subscribeToUserUpdates","subscribeToConnectionStatus","loadUsers","ngOnDestroy","subscriptions","forEach","sub","unsubscribe","userStatusSub","subscribeToUserStatus","subscribe","next","users","filter","user","id","currentUser","error","console","push","connectionSub","getConnectionStatus","status","connectionStatus","getUsers","selectUser","userSelected","emit","isOnline","ONLINE","getStatusClass","getStatusIcon","isSelected","selectedUser","getUserInitial","username","charAt","toUpperCase","getLastSeenText","lastSeen","Date","now","diffInMinutes","Math","floor","getTime","hours","days","refreshUsers","getOnlineUsersCount","length","getTotalUsersCount","trackByUserId","index","selectors","inputs","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\user-list\\user-list.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\user-list\\user-list.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { User, UserStatus } from '../../models/user.model';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit, OnDestroy {\r\n  @Input() users: User[] = [];\r\n  @Input() selectedUser: User | null = null;\r\n  @Input() currentUser: User | null = null;\r\n  @Output() userSelected = new EventEmitter<User>();\r\n\r\n  private subscriptions: Subscription[] = [];\r\n  connectionStatus = false;\r\n\r\n  constructor(\r\n    private chatService: ChatService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToUserUpdates();\r\n    this.subscribeToConnectionStatus();\r\n    this.loadUsers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  private subscribeToUserUpdates(): void {\r\n    const userStatusSub = this.chatService.subscribeToUserStatus().subscribe({\r\n      next: (users: User[]) => {\r\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error receiving user status updates:', error);\r\n      }\r\n    });\r\n\r\n    this.subscriptions.push(userStatusSub);\r\n  }\r\n\r\n  private subscribeToConnectionStatus(): void {\r\n    const connectionSub = this.chatService.getConnectionStatus().subscribe({\r\n      next: (status: boolean) => {\r\n        this.connectionStatus = status;\r\n      }\r\n    });\r\n\r\n    this.subscriptions.push(connectionSub);\r\n  }\r\n\r\n  private loadUsers(): void {\r\n    this.authService.getUsers().subscribe({\r\n      next: (users: User[]) => {\r\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading users:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectUser(user: User): void {\r\n    this.userSelected.emit(user);\r\n  }\r\n\r\n  isOnline(user: User): boolean {\r\n    return user.status === UserStatus.ONLINE;\r\n  }\r\n\r\n  getStatusClass(user: User): string {\r\n    return this.isOnline(user) ? 'user-status-online' : 'user-status-offline';\r\n  }\r\n\r\n  getStatusIcon(user: User): string {\r\n    return this.isOnline(user) ? 'fas fa-circle' : 'far fa-circle';\r\n  }\r\n\r\n  isSelected(user: User): boolean {\r\n    return this.selectedUser?.id === user.id;\r\n  }\r\n\r\n  getUserInitial(username: string): string {\r\n    return username.charAt(0).toUpperCase();\r\n  }\r\n\r\n  getLastSeenText(user: User): string {\r\n    if (this.isOnline(user)) {\r\n      return 'Online';\r\n    }\r\n\r\n    if (!user.lastSeen) {\r\n      return 'Offline';\r\n    }\r\n\r\n    const lastSeen = new Date(user.lastSeen);\r\n    const now = new Date();\r\n    const diffInMinutes = Math.floor((now.getTime() - lastSeen.getTime()) / (1000 * 60));\r\n\r\n    if (diffInMinutes < 1) {\r\n      return 'Just now';\r\n    } else if (diffInMinutes < 60) {\r\n      return `${diffInMinutes}m ago`;\r\n    } else if (diffInMinutes < 1440) { // 24 hours\r\n      const hours = Math.floor(diffInMinutes / 60);\r\n      return `${hours}h ago`;\r\n    } else {\r\n      const days = Math.floor(diffInMinutes / 1440);\r\n      return `${days}d ago`;\r\n    }\r\n  }\r\n\r\n  refreshUsers(): void {\r\n    this.loadUsers();\r\n  }\r\n\r\n  getOnlineUsersCount(): number {\r\n    return this.users.filter(user => this.isOnline(user)).length;\r\n  }\r\n\r\n  getTotalUsersCount(): number {\r\n    return this.users.length;\r\n  }\r\n\r\n  trackByUserId(index: number, user: User): number {\r\n    return user.id;\r\n  }\r\n}","<div class=\"user-list-container\">\r\n  <!-- Header -->\r\n  <div class=\"user-list-header\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h5 class=\"mb-0\">Users</h5>\r\n      <div class=\"user-count-badge\">\r\n        <span class=\"badge bg-primary\">{{ getOnlineUsersCount() }}/{{ getTotalUsersCount() }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Connection Status -->\r\n    <div class=\"connection-status mt-2\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <i [class]=\"connectionStatus ? 'fas fa-wifi text-success' : 'fas fa-wifi-slash text-danger'\"></i>\r\n        <small class=\"ms-2\" [class]=\"connectionStatus ? 'text-success' : 'text-danger'\">\r\n          {{ connectionStatus ? 'Connected' : 'Disconnected' }}\r\n        </small>\r\n        <button \r\n          *ngIf=\"!connectionStatus\" \r\n          class=\"btn btn-sm btn-outline-primary ms-auto\"\r\n          (click)=\"refreshUsers()\"\r\n          title=\"Refresh users\">\r\n          <i class=\"fas fa-sync-alt\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- User List Content -->\r\n  <div class=\"user-list-content\">\r\n    <!-- Online Users Section -->\r\n    <div *ngIf=\"getOnlineUsersCount() > 0\" class=\"user-section\">\r\n      <div class=\"section-header\">\r\n        <small class=\"text-muted text-uppercase fw-bold\">\r\n          <i class=\"fas fa-circle text-success me-1\"></i>\r\n          Online ({{ getOnlineUsersCount() }})\r\n        </small>\r\n      </div>\r\n      \r\n      <ng-container *ngFor=\"let user of users; trackBy: trackByUserId\">\r\n        <div \r\n          *ngIf=\"isOnline(user)\"\r\n          class=\"user-item\"\r\n          [class.active]=\"isSelected(user)\"\r\n          [class.online]=\"isOnline(user)\"\r\n          (click)=\"selectUser(user)\">\r\n          \r\n          <div class=\"d-flex align-items-center\">\r\n            <!-- User Avatar -->\r\n            <div class=\"user-avatar me-3\">\r\n              <div class=\"avatar-circle\" [class.online]=\"isOnline(user)\">\r\n                {{ getUserInitial(user.username) }}\r\n                <div class=\"status-indicator\" [class.online]=\"isOnline(user)\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- User Info -->\r\n            <div class=\"user-info flex-grow-1\">\r\n              <div class=\"user-name\">{{ user.username }}</div>\r\n              <div class=\"user-status\" [ngClass]=\"getStatusClass(user)\">\r\n                <i [class]=\"getStatusIcon(user)\" class=\"me-1\"></i>\r\n                {{ getLastSeenText(user) }}\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Selection Indicator -->\r\n            <div *ngIf=\"isSelected(user)\" class=\"selection-indicator\">\r\n              <i class=\"fas fa-check-circle text-primary\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <!-- Offline Users Section -->\r\n    <div *ngIf=\"users.length - getOnlineUsersCount() > 0\" class=\"user-section\">\r\n      <div class=\"section-header\">\r\n        <small class=\"text-muted text-uppercase fw-bold\">\r\n          <i class=\"far fa-circle text-muted me-1\"></i>\r\n          Offline ({{ users.length - getOnlineUsersCount() }})\r\n        </small>\r\n      </div>\r\n      \r\n      <ng-container *ngFor=\"let user of users; trackBy: trackByUserId\">\r\n        <div \r\n          *ngIf=\"!isOnline(user)\"\r\n          class=\"user-item\"\r\n          [class.active]=\"isSelected(user)\"\r\n          [class.offline]=\"!isOnline(user)\"\r\n          (click)=\"selectUser(user)\">\r\n          \r\n          <div class=\"d-flex align-items-center\">\r\n            <!-- User Avatar -->\r\n            <div class=\"user-avatar me-3\">\r\n              <div class=\"avatar-circle offline\">\r\n                {{ getUserInitial(user.username) }}\r\n                <div class=\"status-indicator offline\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- User Info -->\r\n            <div class=\"user-info flex-grow-1\">\r\n              <div class=\"user-name\">{{ user.username }}</div>\r\n              <div class=\"user-status\" [ngClass]=\"getStatusClass(user)\">\r\n                <i [class]=\"getStatusIcon(user)\" class=\"me-1\"></i>\r\n                {{ getLastSeenText(user) }}\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Selection Indicator -->\r\n            <div *ngIf=\"isSelected(user)\" class=\"selection-indicator\">\r\n              <i class=\"fas fa-check-circle text-primary\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div *ngIf=\"users.length === 0\" class=\"empty-state\">\r\n      <div class=\"text-center py-4\">\r\n        <i class=\"fas fa-users fa-2x text-muted mb-3\"></i>\r\n        <p class=\"text-muted mb-0\">No users available</p>\r\n        <button class=\"btn btn-sm btn-outline-primary mt-2\" (click)=\"refreshUsers()\">\r\n          <i class=\"fas fa-sync-alt me-1\"></i>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div *ngIf=\"users.length === 0 && connectionStatus\" class=\"loading-state\">\r\n      <div class=\"text-center py-4\">\r\n        <div class=\"spinner-border spinner-border-sm text-primary mb-2\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading users...</span>\r\n        </div>\r\n        <p class=\"text-muted mb-0\">Loading users...</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}