{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/notification.service\";\nimport * as i2 from \"@angular/common\";\nfunction NotificationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"i\", 3);\n    i0.ɵɵelementStart(2, \"span\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function NotificationComponent_div_1_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const notification_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeNotification(notification_r1.id));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const notification_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getNotificationClass(notification_r1.type));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getNotificationIcon(notification_r1.type));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r1.message);\n  }\n}\nexport class NotificationComponent {\n  constructor(notificationService) {\n    this.notificationService = notificationService;\n    this.notifications = [];\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.subscription = this.notificationService.getNotifications().subscribe(notifications => {\n      this.notifications = notifications;\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  removeNotification(id) {\n    this.notificationService.removeNotification(id);\n  }\n  getNotificationClass(type) {\n    switch (type) {\n      case 'success':\n        return 'alert-success';\n      case 'error':\n        return 'alert-danger';\n      case 'warning':\n        return 'alert-warning';\n      case 'info':\n        return 'alert-info';\n      default:\n        return 'alert-secondary';\n    }\n  }\n  getNotificationIcon(type) {\n    switch (type) {\n      case 'success':\n        return 'bi-check-circle-fill';\n      case 'error':\n        return 'bi-exclamation-triangle-fill';\n      case 'warning':\n        return 'bi-exclamation-circle-fill';\n      case 'info':\n        return 'bi-info-circle-fill';\n      default:\n        return 'bi-bell-fill';\n    }\n  }\n  static {\n    this.ɵfac = function NotificationComponent_Factory(t) {\n      return new (t || NotificationComponent)(i0.ɵɵdirectiveInject(i1.NotificationService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationComponent,\n      selectors: [[\"app-notification\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"notification-container\"], [\"class\", \"alert alert-dismissible fade show notification-item\", \"role\", \"alert\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-dismissible\", \"fade\", \"show\", \"notification-item\", 3, \"ngClass\"], [1, \"me-2\", 3, \"ngClass\"], [1, \"notification-message\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"]],\n      template: function NotificationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NotificationComponent_div_1_Template, 5, 3, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.notifications);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf],\n      styles: [\".notification-container[_ngcontent-%COMP%] {\\r\\n  position: fixed;\\r\\n  top: 20px;\\r\\n  right: 20px;\\r\\n  z-index: 1050;\\r\\n  max-width: 400px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.notification-item[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 10px;\\r\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n  border-radius: 8px;\\r\\n  animation: _ngcontent-%COMP%_slideIn 0.3s ease-out;\\r\\n}\\r\\n\\r\\n.notification-message[_ngcontent-%COMP%] {\\r\\n  font-weight: 500;\\r\\n  word-wrap: break-word;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_slideIn {\\r\\n  from {\\r\\n    transform: translateX(100%);\\r\\n    opacity: 0;\\r\\n  }\\r\\n  to {\\r\\n    transform: translateX(0);\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.notification-item.fade[_ngcontent-%COMP%] {\\r\\n  transition: opacity 0.3s ease-out;\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .notification-container[_ngcontent-%COMP%] {\\r\\n    top: 10px;\\r\\n    right: 10px;\\r\\n    left: 10px;\\r\\n    max-width: none;\\r\\n  }\\r\\n  \\r\\n  .notification-item[_ngcontent-%COMP%] {\\r\\n    font-size: 0.9rem;\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsU0FBUztFQUNULFdBQVc7RUFDWCxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQix3Q0FBd0M7RUFDeEMsa0JBQWtCO0VBQ2xCLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRTtJQUNFLDJCQUEyQjtJQUMzQixVQUFVO0VBQ1o7RUFDQTtJQUNFLHdCQUF3QjtJQUN4QixVQUFVO0VBQ1o7QUFDRjs7QUFFQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFFQSxzQkFBc0I7QUFDdEI7RUFDRTtJQUNFLFNBQVM7SUFDVCxXQUFXO0lBQ1gsVUFBVTtJQUNWLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5ub3RpZmljYXRpb24tY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAyMHB4O1xyXG4gIHJpZ2h0OiAyMHB4O1xyXG4gIHotaW5kZXg6IDEwNTA7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm5vdGlmaWNhdGlvbi1pdGVtIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGFuaW1hdGlvbjogc2xpZGVJbiAwLjNzIGVhc2Utb3V0O1xyXG59XHJcblxyXG4ubm90aWZpY2F0aW9uLW1lc3NhZ2Uge1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNsaWRlSW4ge1xyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbi5ub3RpZmljYXRpb24taXRlbS5mYWRlIHtcclxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi8qIFJlc3BvbnNpdmUgZGVzaWduICovXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gIC5ub3RpZmljYXRpb24tY29udGFpbmVyIHtcclxuICAgIHRvcDogMTBweDtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgbGVmdDogMTBweDtcclxuICAgIG1heC13aWR0aDogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLm5vdGlmaWNhdGlvbi1pdGVtIHtcclxuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,MAAM;;;;;;;ICAjCC,8BAIe;IAEbA,uBAAuE;IAEvEA,+BAAmC;IAAAA,YAA0B;IAAAA,iBAAO;IAEpEA,iCAIgD;IAA9CA;MAAA;MAAA;MAAA;MAAA,OAASA,4DAAmC;IAAA,EAAC;IAC/CA,iBAAS;;;;;IAZTA,2EAAmD;IAGhDA,eAAkD;IAAlDA,0EAAkD;IAElBA,eAA0B;IAA1BA,6CAA0B;;;ADAjE,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,mBAAwC;IAAxC,wBAAmB,GAAnBA,mBAAmB;IAHvC,kBAAa,GAAmB,EAAE;IAC1B,iBAAY,GAAiB,IAAIJ,YAAY,EAAE;EAEQ;EAE/DK,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,mBAAmB,CAACG,gBAAgB,EAAE,CAACC,SAAS,CACvEC,aAAa,IAAG;MACd,IAAI,CAACA,aAAa,GAAGA,aAAa;IACpC,CAAC,CACF;EACH;EAEAC,WAAW;IACT,IAAI,CAACJ,YAAY,CAACK,WAAW,EAAE;EACjC;EAEAC,kBAAkB,CAACC,EAAU;IAC3B,IAAI,CAACT,mBAAmB,CAACQ,kBAAkB,CAACC,EAAE,CAAC;EACjD;EAEAC,oBAAoB,CAACC,IAAY;IAC/B,QAAQA,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,eAAe;MACxB,KAAK,OAAO;QACV,OAAO,cAAc;MACvB,KAAK,SAAS;QACZ,OAAO,eAAe;MACxB,KAAK,MAAM;QACT,OAAO,YAAY;MACrB;QACE,OAAO,iBAAiB;IAAC;EAE/B;EAEAC,mBAAmB,CAACD,IAAY;IAC9B,QAAQA,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,sBAAsB;MAC/B,KAAK,OAAO;QACV,OAAO,8BAA8B;MACvC,KAAK,SAAS;QACZ,OAAO,4BAA4B;MACrC,KAAK,MAAM;QACT,OAAO,qBAAqB;MAC9B;QACE,OAAO,cAAc;IAAC;EAE5B;;;uBAlDWb,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAe;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCTlCpB,8BAAoC;UAClCA,sEAgBM;UACRA,iBAAM;;;UAhBuBA,eAAgB;UAAhBA,2CAAgB","names":["Subscription","i0","NotificationComponent","constructor","notificationService","ngOnInit","subscription","getNotifications","subscribe","notifications","ngOnDestroy","unsubscribe","removeNotification","id","getNotificationClass","type","getNotificationIcon","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\notification\\notification.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\notification\\notification.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NotificationService, Notification } from '../../services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit, OnDestroy {\r\n  notifications: Notification[] = [];\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(private notificationService: NotificationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.notificationService.getNotifications().subscribe(\r\n      notifications => {\r\n        this.notifications = notifications;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  removeNotification(id: string): void {\r\n    this.notificationService.removeNotification(id);\r\n  }\r\n\r\n  getNotificationClass(type: string): string {\r\n    switch (type) {\r\n      case 'success':\r\n        return 'alert-success';\r\n      case 'error':\r\n        return 'alert-danger';\r\n      case 'warning':\r\n        return 'alert-warning';\r\n      case 'info':\r\n        return 'alert-info';\r\n      default:\r\n        return 'alert-secondary';\r\n    }\r\n  }\r\n\r\n  getNotificationIcon(type: string): string {\r\n    switch (type) {\r\n      case 'success':\r\n        return 'bi-check-circle-fill';\r\n      case 'error':\r\n        return 'bi-exclamation-triangle-fill';\r\n      case 'warning':\r\n        return 'bi-exclamation-circle-fill';\r\n      case 'info':\r\n        return 'bi-info-circle-fill';\r\n      default:\r\n        return 'bi-bell-fill';\r\n    }\r\n  }\r\n}","<div class=\"notification-container\">\r\n  <div \r\n    *ngFor=\"let notification of notifications\" \r\n    class=\"alert alert-dismissible fade show notification-item\"\r\n    [ngClass]=\"getNotificationClass(notification.type)\"\r\n    role=\"alert\">\r\n    \r\n    <i [ngClass]=\"getNotificationIcon(notification.type)\" class=\"me-2\"></i>\r\n    \r\n    <span class=\"notification-message\">{{ notification.message }}</span>\r\n    \r\n    <button \r\n      type=\"button\" \r\n      class=\"btn-close\" \r\n      aria-label=\"Close\"\r\n      (click)=\"removeNotification(notification.id)\">\r\n    </button>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}