{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must be less than 20 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, RegisterComponent_div_12_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(2, RegisterComponent_div_12_div_2_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(3, RegisterComponent_div_12_div_3_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.registerForm.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.registerForm.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.registerForm.get(\"username\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"maxlength\"]);\n  }\n}\nfunction RegisterComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, RegisterComponent_div_17_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(2, RegisterComponent_div_17_div_2_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.registerForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please confirm your password\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, RegisterComponent_div_22_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(2, RegisterComponent_div_22_div_2_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.registerForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.registerForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"passwordMismatch\"]);\n  }\n}\nfunction RegisterComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.errorMessage, \" \");\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.successMessage, \" \");\n  }\n}\nfunction RegisterComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n}\nexport class RegisterComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.loading = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  ngOnInit() {\n    // Redirect if already authenticated\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/chat']);\n    }\n  }\n  passwordMatchValidator(form) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({\n        passwordMismatch: true\n      });\n    } else if (confirmPassword?.errors?.['passwordMismatch']) {\n      delete confirmPassword.errors['passwordMismatch'];\n      if (Object.keys(confirmPassword.errors).length === 0) {\n        confirmPassword.setErrors(null);\n      }\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.successMessage = '';\n      const userData = {\n        username: this.registerForm.value.username,\n        password: this.registerForm.value.password\n      };\n      this.authService.register(userData).subscribe({\n        next: response => {\n          this.loading = false;\n          this.successMessage = 'Registration successful! Redirecting to login...';\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 2000);\n        },\n        error: error => {\n          this.loading = false;\n          this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\n        }\n      });\n    }\n  }\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 34,\n      vars: 15,\n      consts: [[1, \"container-fluid\", \"vh-100\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"row\", \"w-100\"], [1, \"col-md-6\", \"col-lg-4\", \"mx-auto\"], [1, \"card\", \"shadow\"], [1, \"card-body\", \"p-4\"], [1, \"card-title\", \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Choose a username\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Choose a password\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirm your password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [1, \"text-center\", \"mt-3\"], [1, \"mb-0\"], [\"href\", \"#\", 1, \"text-decoration-none\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n          i0.ɵɵtext(6, \"Create Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 9);\n          i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 4, 3, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 11);\n          i0.ɵɵtext(15, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 12);\n          i0.ɵɵtemplate(17, RegisterComponent_div_17_Template, 3, 2, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n          i0.ɵɵtext(20, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 14);\n          i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 3, 2, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(23, RegisterComponent_div_23_Template, 2, 1, \"div\", 15);\n          i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 1, \"div\", 16);\n          i0.ɵɵelementStart(25, \"div\", 17)(26, \"button\", 18);\n          i0.ɵɵtemplate(27, RegisterComponent_span_27_Template, 1, 0, \"span\", 19);\n          i0.ɵɵtext(28);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(29, \"div\", 20)(30, \"p\", 21);\n          i0.ɵɵtext(31, \"Already have an account? \");\n          i0.ɵɵelementStart(32, \"a\", 22);\n          i0.ɵɵlistener(\"click\", function RegisterComponent_Template_a_click_32_listener() {\n            return ctx.navigateToLogin();\n          });\n          i0.ɵɵtext(33, \"Login here\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_1_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_5_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid || ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Creating Account...\" : \"Register\", \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\r\\n  border: none;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.card-body[_ngcontent-%COMP%] {\\r\\n  padding: 2rem;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n  border-radius: 8px;\\r\\n  border: 1px solid #dee2e6;\\r\\n  padding: 0.75rem;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%]:focus {\\r\\n  border-color: #007bff;\\r\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%] {\\r\\n  border-radius: 8px;\\r\\n  padding: 0.75rem;\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n.spinner-border-sm[_ngcontent-%COMP%] {\\r\\n  width: 1rem;\\r\\n  height: 1rem;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n  color: #007bff;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%]:hover {\\r\\n  color: #0056b3;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdEQUFnRDtBQUNsRDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4uY2FyZC1ib2R5IHtcclxuICBwYWRkaW5nOiAycmVtO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sIHtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcclxuICBwYWRkaW5nOiAwLjc1cmVtO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMCwgMTIzLCAyNTUsIDAuMjUpO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnkge1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBwYWRkaW5nOiAwLjc1cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5zcGlubmVyLWJvcmRlci1zbSB7XHJcbiAgd2lkdGg6IDFyZW07XHJcbiAgaGVpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG5hIHtcclxuICBjb2xvcjogIzAwN2JmZjtcclxufVxyXG5cclxuYTpob3ZlciB7XHJcbiAgY29sb3I6ICMwMDU2YjM7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","formBuilder","authService","router","registerForm","group","username","required","minLength","maxLength","password","confirmPassword","validators","passwordMatchValidator","ngOnInit","isAuthenticated","navigate","form","get","value","setErrors","passwordMismatch","errors","Object","keys","length","onSubmit","valid","loading","errorMessage","successMessage","userData","register","subscribe","next","response","setTimeout","error","message","navigateToLogin","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\register\\register.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Redirect if already authenticated\r\n    if (this.authService.isAuthenticated()) {\r\n      this.router.navigate(['/chat']);\r\n    }\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('password');\r\n    const confirmPassword = form.get('confirmPassword');\r\n    \r\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\r\n      confirmPassword.setErrors({ passwordMismatch: true });\r\n    } else if (confirmPassword?.errors?.['passwordMismatch']) {\r\n      delete confirmPassword.errors['passwordMismatch'];\r\n      if (Object.keys(confirmPassword.errors).length === 0) {\r\n        confirmPassword.setErrors(null);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.registerForm.valid) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n      this.successMessage = '';\r\n      \r\n      const userData = {\r\n        username: this.registerForm.value.username,\r\n        password: this.registerForm.value.password\r\n      };\r\n      \r\n      this.authService.register(userData).subscribe({\r\n        next: (response: any) => {\r\n          this.loading = false;\r\n          this.successMessage = 'Registration successful! Redirecting to login...';\r\n          setTimeout(() => {\r\n            this.router.navigate(['/login']);\r\n          }, 2000);\r\n        },\r\n        error: (error: any) => {\r\n          this.loading = false;\r\n          this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  navigateToLogin(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}","<div class=\"container-fluid vh-100 d-flex align-items-center justify-content-center\">\r\n  <div class=\"row w-100\">\r\n    <div class=\"col-md-6 col-lg-4 mx-auto\">\r\n      <div class=\"card shadow\">\r\n        <div class=\"card-body p-4\">\r\n          <h2 class=\"card-title text-center mb-4\">Create Account</h2>\r\n          \r\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"username\" \r\n                formControlName=\"username\"\r\n                [class.is-invalid]=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\"\r\n                placeholder=\"Choose a username\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\">\r\n                <div *ngIf=\"registerForm.get('username')?.errors?.['required']\">Username is required</div>\r\n                <div *ngIf=\"registerForm.get('username')?.errors?.['minlength']\">Username must be at least 3 characters</div>\r\n                <div *ngIf=\"registerForm.get('username')?.errors?.['maxlength']\">Username must be less than 20 characters</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Password</label>\r\n              <input \r\n                type=\"password\" \r\n                class=\"form-control\" \r\n                id=\"password\" \r\n                formControlName=\"password\"\r\n                [class.is-invalid]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\r\n                placeholder=\"Choose a password\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\">\r\n                <div *ngIf=\"registerForm.get('password')?.errors?.['required']\">Password is required</div>\r\n                <div *ngIf=\"registerForm.get('password')?.errors?.['minlength']\">Password must be at least 6 characters</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label>\r\n              <input \r\n                type=\"password\" \r\n                class=\"form-control\" \r\n                id=\"confirmPassword\" \r\n                formControlName=\"confirmPassword\"\r\n                [class.is-invalid]=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\"\r\n                placeholder=\"Confirm your password\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\">\r\n                <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.['required']\">Please confirm your password</div>\r\n                <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.['passwordMismatch']\">Passwords do not match</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-danger\" *ngIf=\"errorMessage\" role=\"alert\">\r\n              {{ errorMessage }}\r\n            </div>\r\n\r\n            <div class=\"alert alert-success\" *ngIf=\"successMessage\" role=\"alert\">\r\n              {{ successMessage }}\r\n            </div>\r\n\r\n            <div class=\"d-grid gap-2\">\r\n              <button \r\n                type=\"submit\" \r\n                class=\"btn btn-primary\" \r\n                [disabled]=\"registerForm.invalid || loading\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                {{ loading ? 'Creating Account...' : 'Register' }}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div class=\"text-center mt-3\">\r\n            <p class=\"mb-0\">Already have an account? \r\n              <a href=\"#\" (click)=\"navigateToLogin()\" class=\"text-decoration-none\">Login here</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}