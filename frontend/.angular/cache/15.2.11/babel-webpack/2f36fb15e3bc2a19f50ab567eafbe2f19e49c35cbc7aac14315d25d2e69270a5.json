{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/loading.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, LoginComponent_div_12_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction LoginComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, LoginComponent_div_17_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, LoginComponent_div_17_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 23);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService, router, loadingService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.loadingService = loadingService;\n    this.loading = false;\n    this.errorMessage = '';\n    this.subscription = new Subscription();\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  ngOnInit() {\n    // Redirect if already authenticated\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/chat']);\n    }\n    // Subscribe to loading state for login\n    this.subscription.add(this.loadingService.getLoadingState().subscribe(loading => {\n      this.loading = this.loadingService.isLoadingFor('login');\n    }));\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      const credentials = this.loginForm.value;\n      this.authService.login(credentials).subscribe({\n        next: response => {\n          this.loading = false;\n          this.router.navigate(['/chat']);\n        },\n        error: error => {\n          this.loading = false;\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.LoadingService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 28,\n      vars: 11,\n      consts: [[1, \"container-fluid\", \"vh-100\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"row\", \"w-100\"], [1, \"col-md-6\", \"col-lg-4\", \"mx-auto\"], [1, \"card\", \"shadow\"], [1, \"card-body\", \"p-4\"], [1, \"card-title\", \"text-center\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter your username\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [1, \"text-center\", \"mt-3\"], [1, \"mb-0\"], [\"href\", \"#\", 1, \"text-decoration-none\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n          i0.ɵɵtext(6, \"Login to Chat\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 9);\n          i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 3, 2, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 11);\n          i0.ɵɵtext(15, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 12);\n          i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 3, 2, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementStart(19, \"div\", 14)(20, \"button\", 15);\n          i0.ɵɵtemplate(21, LoginComponent_span_21_Template, 1, 0, \"span\", 16);\n          i0.ɵɵtext(22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(23, \"div\", 17)(24, \"p\", 18);\n          i0.ɵɵtext(25, \"Don't have an account? \");\n          i0.ɵɵelementStart(26, \"a\", 19);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_26_listener() {\n            return ctx.navigateToRegister();\n          });\n          i0.ɵɵtext(27, \"Register here\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Logging in...\" : \"Login\", \" \");\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\r\\n  border: none;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.card-body[_ngcontent-%COMP%] {\\r\\n  padding: 2rem;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n  border-radius: 8px;\\r\\n  border: 1px solid #dee2e6;\\r\\n  padding: 0.75rem;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%]:focus {\\r\\n  border-color: #007bff;\\r\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%] {\\r\\n  border-radius: 8px;\\r\\n  padding: 0.75rem;\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n.spinner-border-sm[_ngcontent-%COMP%] {\\r\\n  width: 1rem;\\r\\n  height: 1rem;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n  color: #007bff;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%]:hover {\\r\\n  color: #0056b3;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdEQUFnRDtBQUNsRDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4uY2FyZC1ib2R5IHtcclxuICBwYWRkaW5nOiAycmVtO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sIHtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcclxuICBwYWRkaW5nOiAwLjc1cmVtO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMCwgMTIzLCAyNTUsIDAuMjUpO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnkge1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBwYWRkaW5nOiAwLjc1cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5zcGlubmVyLWJvcmRlci1zbSB7XHJcbiAgd2lkdGg6IDFyZW07XHJcbiAgaGVpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG5hIHtcclxuICBjb2xvcjogIzAwN2JmZjtcclxufVxyXG5cclxuYTpob3ZlciB7XHJcbiAgY29sb3I6ICMwMDU2YjM7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","Subscription","i0","LoginComponent","constructor","formBuilder","authService","router","loadingService","loginForm","group","username","required","minLength","password","ngOnInit","isAuthenticated","navigate","subscription","add","getLoadingState","subscribe","loading","isLoadingFor","ngOnDestroy","unsubscribe","onSubmit","valid","errorMessage","credentials","value","login","next","response","error","message","navigateToRegister","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { LoadingService } from '../../services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  errorMessage = '';\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private loadingService: LoadingService\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Redirect if already authenticated\r\n    if (this.authService.isAuthenticated()) {\r\n      this.router.navigate(['/chat']);\r\n    }\r\n\r\n    // Subscribe to loading state for login\r\n    this.subscription.add(\r\n      this.loadingService.getLoadingState().subscribe(loading => {\r\n        this.loading = this.loadingService.isLoadingFor('login');\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n      \r\n      const credentials = this.loginForm.value;\r\n      \r\n      this.authService.login(credentials).subscribe({\r\n        next: (response: any) => {\r\n          this.loading = false;\r\n          this.router.navigate(['/chat']);\r\n        },\r\n        error: (error: any) => {\r\n          this.loading = false;\r\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  navigateToRegister(): void {\r\n    this.router.navigate(['/register']);\r\n  }\r\n}","<div class=\"container-fluid vh-100 d-flex align-items-center justify-content-center\">\r\n  <div class=\"row w-100\">\r\n    <div class=\"col-md-6 col-lg-4 mx-auto\">\r\n      <div class=\"card shadow\">\r\n        <div class=\"card-body p-4\">\r\n          <h2 class=\"card-title text-center mb-4\">Login to Chat</h2>\r\n          \r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Username</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"username\" \r\n                formControlName=\"username\"\r\n                [class.is-invalid]=\"loginForm.get('username')?.invalid && loginForm.get('username')?.touched\"\r\n                placeholder=\"Enter your username\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('username')?.invalid && loginForm.get('username')?.touched\">\r\n                <div *ngIf=\"loginForm.get('username')?.errors?.['required']\">Username is required</div>\r\n                <div *ngIf=\"loginForm.get('username')?.errors?.['minlength']\">Username must be at least 3 characters</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Password</label>\r\n              <input \r\n                type=\"password\" \r\n                class=\"form-control\" \r\n                id=\"password\" \r\n                formControlName=\"password\"\r\n                [class.is-invalid]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\r\n                placeholder=\"Enter your password\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\r\n                <div *ngIf=\"loginForm.get('password')?.errors?.['required']\">Password is required</div>\r\n                <div *ngIf=\"loginForm.get('password')?.errors?.['minlength']\">Password must be at least 6 characters</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-danger\" *ngIf=\"errorMessage\" role=\"alert\">\r\n              {{ errorMessage }}\r\n            </div>\r\n\r\n            <div class=\"d-grid gap-2\">\r\n              <button \r\n                type=\"submit\" \r\n                class=\"btn btn-primary\" \r\n                [disabled]=\"loginForm.invalid || loading\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                {{ loading ? 'Logging in...' : 'Login' }}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div class=\"text-center mt-3\">\r\n            <p class=\"mb-0\">Don't have an account? \r\n              <a href=\"#\" (click)=\"navigateToRegister()\" class=\"text-decoration-none\">Register here</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}