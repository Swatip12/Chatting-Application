{"ast":null,"code":"import { MessageType } from '../../models/message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"../../services/group.service\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"messagesContainer\"];\nfunction GroupChatComponent_div_13_div_7_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵelement(1, \"i\", 35);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GroupChatComponent_div_13_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28);\n    i0.ɵɵelement(2, \"i\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30)(4, \"div\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵtemplate(6, GroupChatComponent_div_13_div_7_span_6_Template, 2, 0, \"span\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"small\", 33);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const member_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", member_r5.username, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", member_r5.username === ctx_r4.group.createdBy);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"online\", member_r5.status === \"ONLINE\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r5.status === \"ONLINE\" ? \"Online\" : \"Offline\", \" \");\n  }\n}\nfunction GroupChatComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 22)(2, \"h6\", 3);\n    i0.ɵɵtext(3, \"Group Members\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function GroupChatComponent_div_13_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.toggleMembers());\n    });\n    i0.ɵɵelement(5, \"i\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 25);\n    i0.ɵɵtemplate(7, GroupChatComponent_div_13_div_7_Template, 9, 5, \"div\", 26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"show\", ctx_r0.showMembers);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.group.members);\n  }\n}\nfunction GroupChatComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"span\", 38);\n    i0.ɵɵtext(3, \"Loading messages...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GroupChatComponent_div_18_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.getMessageDate(message_r11));\n  }\n}\nfunction GroupChatComponent_div_18_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"small\", 5);\n    i0.ɵɵelement(2, \"i\", 46);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r11.content, \" \");\n  }\n}\nfunction GroupChatComponent_div_18_ng_container_1_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r11 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r11.sender.username);\n  }\n}\nfunction GroupChatComponent_div_18_ng_container_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"div\", 48);\n    i0.ɵɵtemplate(2, GroupChatComponent_div_18_ng_container_1_div_3_div_2_Template, 3, 1, \"div\", 49);\n    i0.ɵɵelementStart(3, \"div\", 50);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 51);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"own-message\", ctx_r15.isOwnMessage(message_r11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.isOwnMessage(message_r11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r11.content, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.getMessageTime(message_r11), \" \");\n  }\n}\nfunction GroupChatComponent_div_18_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GroupChatComponent_div_18_ng_container_1_div_1_Template, 3, 1, \"div\", 41);\n    i0.ɵɵtemplate(2, GroupChatComponent_div_18_ng_container_1_div_2_Template, 4, 1, \"div\", 42);\n    i0.ɵɵtemplate(3, GroupChatComponent_div_18_ng_container_1_div_3_Template, 7, 5, \"div\", 43);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r11 = ctx.$implicit;\n    const i_r12 = ctx.index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.shouldShowDateSeparator(i_r12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.isSystemMessage(message_r11));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.isSystemMessage(message_r11));\n  }\n}\nfunction GroupChatComponent_div_18_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53)(1, \"div\", 54);\n    i0.ɵɵelement(2, \"i\", 55);\n    i0.ɵɵelementStart(3, \"p\", 5);\n    i0.ɵɵtext(4, \"No messages yet. Start the conversation!\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GroupChatComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, GroupChatComponent_div_18_ng_container_1_Template, 4, 3, \"ng-container\", 39);\n    i0.ɵɵtemplate(2, GroupChatComponent_div_18_div_2_Template, 5, 0, \"div\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.messages);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.messages.length === 0);\n  }\n}\nexport class GroupChatComponent {\n  constructor(chatService, groupService, authService) {\n    this.chatService = chatService;\n    this.groupService = groupService;\n    this.authService = authService;\n    this.messages = [];\n    this.newMessage = '';\n    this.currentUser = null;\n    this.isLoading = false;\n    this.showMembers = false;\n    this.shouldScrollToBottom = false;\n    this.currentUser = this.authService.getCurrentUser();\n  }\n  ngOnInit() {\n    this.loadGroupMessages();\n    this.subscribeToMessages();\n    this.subscribeToGroupUpdates();\n  }\n  ngOnDestroy() {\n    if (this.messageSubscription) {\n      this.messageSubscription.unsubscribe();\n    }\n  }\n  ngAfterViewChecked() {\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n  loadGroupMessages() {\n    this.isLoading = true;\n    // Load message history from backend\n    this.authService.getGroupMessageHistory(this.group.id).subscribe({\n      next: messages => {\n        this.messages = messages;\n        this.shouldScrollToBottom = true;\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading group messages:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n  subscribeToMessages() {\n    this.messageSubscription = this.chatService.subscribeToMessages().subscribe({\n      next: message => {\n        // Only add messages for this group\n        if (message.groupId === this.group.id) {\n          this.messages.push(message);\n          this.shouldScrollToBottom = true;\n        }\n      },\n      error: error => {\n        console.error('Error receiving messages:', error);\n      }\n    });\n  }\n  subscribeToGroupUpdates() {\n    // Subscribe to group-specific topic for member join/leave notifications\n    if (this.chatService.isConnected()) {\n      // This would be handled by the ChatService's group subscription\n    }\n  }\n  sendMessage() {\n    if (this.newMessage.trim() && this.currentUser) {\n      const message = {\n        sender: this.currentUser,\n        content: this.newMessage.trim(),\n        type: MessageType.CHAT,\n        timestamp: new Date(),\n        groupId: this.group.id\n      };\n      this.chatService.sendGroupMessage(message, this.group.id);\n      this.newMessage = '';\n    }\n  }\n  onKeyPress(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  toggleMembers() {\n    this.showMembers = !this.showMembers;\n    if (this.showMembers && this.group.members) {\n      // Refresh group details to get latest member list\n      this.groupService.getGroup(this.group.id, true).subscribe({\n        next: updatedGroup => {\n          this.group = updatedGroup;\n        },\n        error: error => {\n          console.error('Error refreshing group details:', error);\n        }\n      });\n    }\n  }\n  scrollToBottom() {\n    try {\n      if (this.messagesContainer) {\n        const element = this.messagesContainer.nativeElement;\n        element.scrollTop = element.scrollHeight;\n      }\n    } catch (err) {\n      console.error('Error scrolling to bottom:', err);\n    }\n  }\n  isOwnMessage(message) {\n    return message.sender.username === this.currentUser?.username;\n  }\n  isSystemMessage(message) {\n    return message.type === MessageType.JOIN || message.type === MessageType.LEAVE;\n  }\n  getMessageTime(message) {\n    return new Date(message.timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n  getMessageDate(message) {\n    return new Date(message.timestamp).toLocaleDateString();\n  }\n  shouldShowDateSeparator(index) {\n    if (index === 0) return true;\n    const currentDate = new Date(this.messages[index].timestamp).toDateString();\n    const previousDate = new Date(this.messages[index - 1].timestamp).toDateString();\n    return currentDate !== previousDate;\n  }\n  static {\n    this.ɵfac = function GroupChatComponent_Factory(t) {\n      return new (t || GroupChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.GroupService), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GroupChatComponent,\n      selectors: [[\"app-group-chat\"]],\n      viewQuery: function GroupChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messagesContainer = _t.first);\n        }\n      },\n      inputs: {\n        group: \"group\"\n      },\n      decls: 26,\n      vars: 12,\n      consts: [[1, \"group-chat-container\"], [1, \"group-header\"], [1, \"group-info\"], [1, \"mb-0\"], [1, \"fas\", \"fa-users\", \"me-2\"], [1, \"text-muted\"], [1, \"group-actions\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [1, \"fas\", \"fa-users\"], [1, \"group-content\"], [\"class\", \"members-sidebar\", 3, \"show\", 4, \"ngIf\"], [1, \"chat-area\"], [1, \"messages-container\"], [\"messagesContainer\", \"\"], [\"class\", \"text-center py-3\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"message-input-container\"], [1, \"input-group\"], [\"placeholder\", \"Type your message...\", \"rows\", \"1\", \"maxlength\", \"1000\", 1, \"form-control\", \"message-input\", 3, \"ngModel\", \"ngModelChange\", \"keypress\"], [1, \"btn\", \"btn-primary\", \"send-button\", 3, \"disabled\", \"click\"], [1, \"fas\", \"fa-paper-plane\"], [1, \"members-sidebar\"], [1, \"members-header\"], [1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [1, \"members-list\"], [\"class\", \"member-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"member-item\"], [1, \"member-avatar\"], [1, \"fas\", \"fa-user\"], [1, \"member-info\"], [1, \"member-name\"], [\"class\", \"creator-badge\", 4, \"ngIf\"], [1, \"member-status\"], [1, \"creator-badge\"], [\"title\", \"Group Creator\", 1, \"fas\", \"fa-crown\"], [1, \"text-center\", \"py-3\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"empty-messages\", 4, \"ngIf\"], [\"class\", \"date-separator\", 4, \"ngIf\"], [\"class\", \"system-message\", 4, \"ngIf\"], [\"class\", \"message-wrapper\", 3, \"own-message\", 4, \"ngIf\"], [1, \"date-separator\"], [1, \"system-message\"], [1, \"fas\", \"fa-info-circle\", \"me-1\"], [1, \"message-wrapper\"], [1, \"message-bubble\"], [\"class\", \"message-header\", 4, \"ngIf\"], [1, \"message-content\"], [1, \"message-time\"], [1, \"message-header\"], [1, \"empty-messages\"], [1, \"text-center\", \"py-4\"], [1, \"fas\", \"fa-comments\", \"fa-2x\", \"text-muted\", \"mb-2\"]],\n      template: function GroupChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n          i0.ɵɵelement(4, \"i\", 4);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"small\", 5);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function GroupChatComponent_Template_button_click_9_listener() {\n            return ctx.toggleMembers();\n          });\n          i0.ɵɵelement(10, \"i\", 8);\n          i0.ɵɵtext(11, \" Members \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"div\", 9);\n          i0.ɵɵtemplate(13, GroupChatComponent_div_13_Template, 8, 3, \"div\", 10);\n          i0.ɵɵelementStart(14, \"div\", 11)(15, \"div\", 12, 13);\n          i0.ɵɵtemplate(17, GroupChatComponent_div_17_Template, 4, 0, \"div\", 14);\n          i0.ɵɵtemplate(18, GroupChatComponent_div_18_Template, 3, 2, \"div\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 16)(20, \"div\", 17)(21, \"textarea\", 18);\n          i0.ɵɵlistener(\"ngModelChange\", function GroupChatComponent_Template_textarea_ngModelChange_21_listener($event) {\n            return ctx.newMessage = $event;\n          })(\"keypress\", function GroupChatComponent_Template_textarea_keypress_21_listener($event) {\n            return ctx.onKeyPress($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 19);\n          i0.ɵɵlistener(\"click\", function GroupChatComponent_Template_button_click_22_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelement(23, \"i\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"small\", 5);\n          i0.ɵɵtext(25, \"Press Enter to send, Shift+Enter for new line\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.group.name, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate2(\" \", ctx.group.memberCount, \" member\", ctx.group.memberCount !== 1 ? \"s\" : \"\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"active\", ctx.showMembers);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.showMembers && ctx.group.members);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"with-sidebar\", ctx.showMembers);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", !ctx.newMessage.trim());\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.MaxLengthValidator, i5.NgModel],\n      styles: [\".group-chat-container[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  background-color: #fff;\\r\\n}\\r\\n\\r\\n.group-header[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  padding: 1rem;\\r\\n  border-bottom: 1px solid #dee2e6;\\r\\n  background-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n.group-content[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  display: flex;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.members-sidebar[_ngcontent-%COMP%] {\\r\\n  width: 250px;\\r\\n  border-right: 1px solid #dee2e6;\\r\\n  background-color: #f8f9fa;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.members-header[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  padding: 1rem;\\r\\n  border-bottom: 1px solid #dee2e6;\\r\\n}\\r\\n\\r\\n.members-list[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  overflow-y: auto;\\r\\n  padding: 0.5rem;\\r\\n}\\r\\n\\r\\n.member-item[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding: 0.5rem;\\r\\n  border-radius: 8px;\\r\\n  margin-bottom: 0.25rem;\\r\\n}\\r\\n\\r\\n.member-item[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #e9ecef;\\r\\n}\\r\\n\\r\\n.member-avatar[_ngcontent-%COMP%] {\\r\\n  width: 32px;\\r\\n  height: 32px;\\r\\n  border-radius: 50%;\\r\\n  background-color: #007bff;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  color: white;\\r\\n  margin-right: 0.75rem;\\r\\n  font-size: 0.8rem;\\r\\n}\\r\\n\\r\\n.member-info[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.member-name[_ngcontent-%COMP%] {\\r\\n  font-weight: 500;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n.creator-badge[_ngcontent-%COMP%] {\\r\\n  color: #ffc107;\\r\\n  font-size: 0.7rem;\\r\\n}\\r\\n\\r\\n.member-status[_ngcontent-%COMP%] {\\r\\n  color: #6c757d;\\r\\n}\\r\\n\\r\\n.member-status.online[_ngcontent-%COMP%] {\\r\\n  color: #28a745;\\r\\n}\\r\\n\\r\\n.chat-area[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.messages-container[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  overflow-y: auto;\\r\\n  padding: 1rem;\\r\\n  background-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n.date-separator[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.date-separator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n  background-color: #fff;\\r\\n  padding: 0.25rem 0.75rem;\\r\\n  border-radius: 15px;\\r\\n  font-size: 0.8rem;\\r\\n  color: #6c757d;\\r\\n  border: 1px solid #dee2e6;\\r\\n}\\r\\n\\r\\n.system-message[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  margin: 0.5rem 0;\\r\\n}\\r\\n\\r\\n.message-wrapper[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 1rem;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.message-wrapper.own-message[_ngcontent-%COMP%] {\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.message-bubble[_ngcontent-%COMP%] {\\r\\n  max-width: 70%;\\r\\n  padding: 0.75rem;\\r\\n  border-radius: 18px;\\r\\n  background-color: #e9ecef;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.own-message[_ngcontent-%COMP%]   .message-bubble[_ngcontent-%COMP%] {\\r\\n  background-color: #007bff;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.message-header[_ngcontent-%COMP%] {\\r\\n  font-size: 0.8rem;\\r\\n  margin-bottom: 0.25rem;\\r\\n  color: #007bff;\\r\\n}\\r\\n\\r\\n.own-message[_ngcontent-%COMP%]   .message-header[_ngcontent-%COMP%] {\\r\\n  color: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n.message-content[_ngcontent-%COMP%] {\\r\\n  word-wrap: break-word;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.message-time[_ngcontent-%COMP%] {\\r\\n  font-size: 0.7rem;\\r\\n  margin-top: 0.25rem;\\r\\n  opacity: 0.7;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.message-input-container[_ngcontent-%COMP%] {\\r\\n  padding: 1rem;\\r\\n  border-top: 1px solid #dee2e6;\\r\\n  background-color: #fff;\\r\\n}\\r\\n\\r\\n.message-input[_ngcontent-%COMP%] {\\r\\n  resize: none;\\r\\n  border-radius: 20px;\\r\\n  border: 1px solid #dee2e6;\\r\\n  padding: 0.75rem 1rem;\\r\\n}\\r\\n\\r\\n.message-input[_ngcontent-%COMP%]:focus {\\r\\n  border-color: #007bff;\\r\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\r\\n}\\r\\n\\r\\n.send-button[_ngcontent-%COMP%] {\\r\\n  border-radius: 50%;\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.empty-messages[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.btn.active[_ngcontent-%COMP%] {\\r\\n  background-color: #007bff;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .members-sidebar[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    height: 100%;\\r\\n    z-index: 1000;\\r\\n    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  .chat-area.with-sidebar[_ngcontent-%COMP%] {\\r\\n    margin-left: 0;\\r\\n  }\\r\\n  \\r\\n  .message-bubble[_ngcontent-%COMP%] {\\r\\n    max-width: 85%;\\r\\n  }\\r\\n  \\r\\n  .group-header[_ngcontent-%COMP%] {\\r\\n    padding: 0.75rem;\\r\\n  }\\r\\n  \\r\\n  .message-input-container[_ngcontent-%COMP%] {\\r\\n    padding: 0.75rem;\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["MessageType","i0","GroupChatComponent","constructor","chatService","groupService","authService","currentUser","getCurrentUser","ngOnInit","loadGroupMessages","subscribeToMessages","subscribeToGroupUpdates","ngOnDestroy","messageSubscription","unsubscribe","ngAfterViewChecked","shouldScrollToBottom","scrollToBottom","isLoading","getGroupMessageHistory","group","id","subscribe","next","messages","error","console","message","groupId","push","isConnected","sendMessage","newMessage","trim","sender","content","type","CHAT","timestamp","Date","sendGroupMessage","onKeyPress","event","key","shiftKey","preventDefault","toggleMembers","showMembers","members","getGroup","updatedGroup","messagesContainer","element","nativeElement","scrollTop","scrollHeight","err","isOwnMessage","username","isSystemMessage","JOIN","LEAVE","getMessageTime","toLocaleTimeString","hour","minute","getMessageDate","toLocaleDateString","shouldShowDateSeparator","index","currentDate","toDateString","previousDate","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\group-chat\\group-chat.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\group-chat\\group-chat.component.html"],"sourcesContent":["import { Component, Input, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { GroupService } from '../../services/group.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Group } from '../../models/group.model';\r\nimport { Message, MessageType } from '../../models/message.model';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-group-chat',\r\n  templateUrl: './group-chat.component.html',\r\n  styleUrls: ['./group-chat.component.css']\r\n})\r\nexport class GroupChatComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  @Input() group!: Group;\r\n  @ViewChild('messagesContainer') messagesContainer!: ElementRef;\r\n\r\n  messages: Message[] = [];\r\n  newMessage = '';\r\n  currentUser: User | null = null;\r\n  isLoading = false;\r\n  showMembers = false;\r\n  \r\n  private messageSubscription?: Subscription;\r\n  private shouldScrollToBottom = false;\r\n\r\n  constructor(\r\n    private chatService: ChatService,\r\n    private groupService: GroupService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadGroupMessages();\r\n    this.subscribeToMessages();\r\n    this.subscribeToGroupUpdates();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.messageSubscription) {\r\n      this.messageSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.shouldScrollToBottom) {\r\n      this.scrollToBottom();\r\n      this.shouldScrollToBottom = false;\r\n    }\r\n  }\r\n\r\n  private loadGroupMessages(): void {\r\n    this.isLoading = true;\r\n    // Load message history from backend\r\n    this.authService.getGroupMessageHistory(this.group.id).subscribe({\r\n      next: (messages) => {\r\n        this.messages = messages;\r\n        this.shouldScrollToBottom = true;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading group messages:', error);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private subscribeToMessages(): void {\r\n    this.messageSubscription = this.chatService.subscribeToMessages().subscribe({\r\n      next: (message) => {\r\n        // Only add messages for this group\r\n        if (message.groupId === this.group.id) {\r\n          this.messages.push(message);\r\n          this.shouldScrollToBottom = true;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error receiving messages:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private subscribeToGroupUpdates(): void {\r\n    // Subscribe to group-specific topic for member join/leave notifications\r\n    if (this.chatService.isConnected()) {\r\n      // This would be handled by the ChatService's group subscription\r\n    }\r\n  }\r\n\r\n  sendMessage(): void {\r\n    if (this.newMessage.trim() && this.currentUser) {\r\n      const message: Message = {\r\n        sender: this.currentUser,\r\n        content: this.newMessage.trim(),\r\n        type: MessageType.CHAT,\r\n        timestamp: new Date(),\r\n        groupId: this.group.id\r\n      };\r\n\r\n      this.chatService.sendGroupMessage(message, this.group.id);\r\n      this.newMessage = '';\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: KeyboardEvent): void {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      this.sendMessage();\r\n    }\r\n  }\r\n\r\n  toggleMembers(): void {\r\n    this.showMembers = !this.showMembers;\r\n    if (this.showMembers && this.group.members) {\r\n      // Refresh group details to get latest member list\r\n      this.groupService.getGroup(this.group.id, true).subscribe({\r\n        next: (updatedGroup) => {\r\n          this.group = updatedGroup;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error refreshing group details:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    try {\r\n      if (this.messagesContainer) {\r\n        const element = this.messagesContainer.nativeElement;\r\n        element.scrollTop = element.scrollHeight;\r\n      }\r\n    } catch (err) {\r\n      console.error('Error scrolling to bottom:', err);\r\n    }\r\n  }\r\n\r\n  isOwnMessage(message: Message): boolean {\r\n    return message.sender.username === this.currentUser?.username;\r\n  }\r\n\r\n  isSystemMessage(message: Message): boolean {\r\n    return message.type === MessageType.JOIN || message.type === MessageType.LEAVE;\r\n  }\r\n\r\n  getMessageTime(message: Message): string {\r\n    return new Date(message.timestamp).toLocaleTimeString([], { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  }\r\n\r\n  getMessageDate(message: Message): string {\r\n    return new Date(message.timestamp).toLocaleDateString();\r\n  }\r\n\r\n  shouldShowDateSeparator(index: number): boolean {\r\n    if (index === 0) return true;\r\n    \r\n    const currentDate = new Date(this.messages[index].timestamp).toDateString();\r\n    const previousDate = new Date(this.messages[index - 1].timestamp).toDateString();\r\n    \r\n    return currentDate !== previousDate;\r\n  }\r\n}","<div class=\"group-chat-container\">\r\n    <!-- Group Header -->\r\n    <div class=\"group-header\">\r\n        <div class=\"group-info\">\r\n            <h5 class=\"mb-0\">\r\n                <i class=\"fas fa-users me-2\"></i>\r\n                {{ group.name }}\r\n            </h5>\r\n            <small class=\"text-muted\">\r\n                {{ group.memberCount }} member{{ group.memberCount !== 1 ? 's' : '' }}\r\n            </small>\r\n        </div>\r\n        <div class=\"group-actions\">\r\n            <button class=\"btn btn-sm btn-outline-primary\" (click)=\"toggleMembers()\" [class.active]=\"showMembers\">\r\n                <i class=\"fas fa-users\"></i>\r\n                Members\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"group-content\">\r\n        <!-- Members Sidebar -->\r\n        <div class=\"members-sidebar\" [class.show]=\"showMembers\" *ngIf=\"showMembers && group.members\">\r\n            <div class=\"members-header\">\r\n                <h6 class=\"mb-0\">Group Members</h6>\r\n                <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"toggleMembers()\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"members-list\">\r\n                <div *ngFor=\"let member of group.members\" class=\"member-item\">\r\n                    <div class=\"member-avatar\">\r\n                        <i class=\"fas fa-user\"></i>\r\n                    </div>\r\n                    <div class=\"member-info\">\r\n                        <div class=\"member-name\">\r\n                            {{ member.username }}\r\n                            <span *ngIf=\"member.username === group.createdBy\" class=\"creator-badge\">\r\n                                <i class=\"fas fa-crown\" title=\"Group Creator\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <small class=\"member-status\" [class.online]=\"member.status === 'ONLINE'\">\r\n                            {{ member.status === 'ONLINE' ? 'Online' : 'Offline' }}\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Chat Area -->\r\n        <div class=\"chat-area\" [class.with-sidebar]=\"showMembers\">\r\n            <!-- Messages Container -->\r\n            <div class=\"messages-container\" #messagesContainer>\r\n                <!-- Loading Spinner -->\r\n                <div *ngIf=\"isLoading\" class=\"text-center py-3\">\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading messages...</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Messages -->\r\n                <div *ngIf=\"!isLoading\">\r\n                    <ng-container *ngFor=\"let message of messages; let i = index\">\r\n                        <!-- Date Separator -->\r\n                        <div *ngIf=\"shouldShowDateSeparator(i)\" class=\"date-separator\">\r\n                            <span>{{ getMessageDate(message) }}</span>\r\n                        </div>\r\n\r\n                        <!-- System Messages -->\r\n                        <div *ngIf=\"isSystemMessage(message)\" class=\"system-message\">\r\n                            <small class=\"text-muted\">\r\n                                <i class=\"fas fa-info-circle me-1\"></i>\r\n                                {{ message.content }}\r\n                            </small>\r\n                        </div>\r\n\r\n                        <!-- Chat Messages -->\r\n                        <div *ngIf=\"!isSystemMessage(message)\" class=\"message-wrapper\"\r\n                            [class.own-message]=\"isOwnMessage(message)\">\r\n                            <div class=\"message-bubble\">\r\n                                <div class=\"message-header\" *ngIf=\"!isOwnMessage(message)\">\r\n                                    <strong>{{ message.sender.username }}</strong>\r\n                                </div>\r\n                                <div class=\"message-content\">\r\n                                    {{ message.content }}\r\n                                </div>\r\n                                <div class=\"message-time\">\r\n                                    {{ getMessageTime(message) }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <!-- Empty State -->\r\n                    <div *ngIf=\"messages.length === 0\" class=\"empty-messages\">\r\n                        <div class=\"text-center py-4\">\r\n                            <i class=\"fas fa-comments fa-2x text-muted mb-2\"></i>\r\n                            <p class=\"text-muted\">No messages yet. Start the conversation!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Message Input -->\r\n            <div class=\"message-input-container\">\r\n                <div class=\"input-group\">\r\n                    <textarea class=\"form-control message-input\" placeholder=\"Type your message...\"\r\n                        [(ngModel)]=\"newMessage\" (keypress)=\"onKeyPress($event)\" rows=\"1\" maxlength=\"1000\"></textarea>\r\n                    <button class=\"btn btn-primary send-button\" (click)=\"sendMessage()\" [disabled]=\"!newMessage.trim()\">\r\n                        <i class=\"fas fa-paper-plane\"></i>\r\n                    </button>\r\n                </div>\r\n                <small class=\"text-muted\">Press Enter to send, Shift+Enter for new line</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}