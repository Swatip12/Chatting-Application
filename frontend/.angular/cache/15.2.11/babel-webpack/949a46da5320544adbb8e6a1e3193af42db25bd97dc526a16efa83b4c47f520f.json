{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction LoadingSpinnerComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.text);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"inline-loading\": a0\n  };\n};\nexport class LoadingSpinnerComponent {\n  constructor() {\n    this.size = 'md';\n    this.color = 'primary';\n    this.text = 'Loading...';\n    this.inline = false;\n  }\n  getSpinnerClass() {\n    let classes = 'spinner-border';\n    if (this.size === 'sm') {\n      classes += ' spinner-border-sm';\n    }\n    classes += ` text-${this.color}`;\n    return classes;\n  }\n  static {\n    this.ɵfac = function LoadingSpinnerComponent_Factory(t) {\n      return new (t || LoadingSpinnerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoadingSpinnerComponent,\n      selectors: [[\"app-loading-spinner\"]],\n      inputs: {\n        size: \"size\",\n        color: \"color\",\n        text: \"text\",\n        inline: \"inline\"\n      },\n      decls: 5,\n      vars: 6,\n      consts: [[1, \"loading-container\", 3, \"ngClass\"], [\"role\", \"status\", 3, \"ngClass\"], [1, \"visually-hidden\"], [\"class\", \"loading-text ms-2\", 4, \"ngIf\"], [1, \"loading-text\", \"ms-2\"]],\n      template: function LoadingSpinnerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(4, LoadingSpinnerComponent_span_4_Template, 2, 1, \"span\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx.inline));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngClass\", ctx.getSpinnerClass());\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.text);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.text && !ctx.inline);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgIf],\n      styles: [\".loading-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\n.inline-loading[_ngcontent-%COMP%] {\\r\\n  display: inline-flex;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.loading-text[_ngcontent-%COMP%] {\\r\\n  font-size: 0.9rem;\\r\\n  color: #6c757d;\\r\\n}\\r\\n\\r\\n\\r\\n.global-loading-overlay[_ngcontent-%COMP%] {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgba(0, 0, 0, 0.5);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  z-index: 9999;\\r\\n}\\r\\n\\r\\n.global-loading-content[_ngcontent-%COMP%] {\\r\\n  background: white;\\r\\n  padding: 2rem;\\r\\n  border-radius: 8px;\\r\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n  text-align: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2FkaW5nLXNwaW5uZXIvbG9hZGluZy1zcGlubmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUEsMkJBQTJCO0FBQzNCO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixPQUFPO0VBQ1AsV0FBVztFQUNYLFlBQVk7RUFDWixvQ0FBb0M7RUFDcEMsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsd0NBQXdDO0VBQ3hDLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2FkaW5nLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDFyZW07XHJcbn1cclxuXHJcbi5pbmxpbmUtbG9hZGluZyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLmxvYWRpbmctdGV4dCB7XHJcbiAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgY29sb3I6ICM2Yzc1N2Q7XHJcbn1cclxuXHJcbi8qIEdsb2JhbCBsb2FkaW5nIG92ZXJsYXkgKi9cclxuLmdsb2JhbC1sb2FkaW5nLW92ZXJsYXkge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB6LWluZGV4OiA5OTk5O1xyXG59XHJcblxyXG4uZ2xvYmFsLWxvYWRpbmctY29udGVudCB7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgcGFkZGluZzogMnJlbTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;IAIEA,+BAAwD;IAAAA,YAAU;IAAAA,iBAAO;;;;IAAjBA,eAAU;IAAVA,iCAAU;;;;;;;;ACGpE,OAAM,MAAOC,uBAAuB;EAMlCC;IALS,SAAI,GAAuB,IAAI;IAC/B,UAAK,GAA+C,SAAS;IAC7D,SAAI,GAAW,YAAY;IAC3B,WAAM,GAAY,KAAK;EAEjB;EAEfC,eAAe;IACb,IAAIC,OAAO,GAAG,gBAAgB;IAE9B,IAAI,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MACtBD,OAAO,IAAI,oBAAoB;;IAGjCA,OAAO,IAAI,SAAS,IAAI,CAACE,KAAK,EAAE;IAEhC,OAAOF,OAAO;EAChB;;;uBAlBWH,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAAM;MAAAC;QAAAH;QAAAC;QAAAG;QAAAC;MAAA;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDPpCd,8BAAsE;UAEpCA,YAAU;UAAAA,iBAAO;UAEjDA,0EAAyE;UAC3EA,iBAAM;;;UALyBA,gEAAsC;UAC9DA,eAA6B;UAA7BA,+CAA6B;UACFA,eAAU;UAAVA,8BAAU;UAEnCA,eAAqB;UAArBA,8CAAqB","names":["i0","LoadingSpinnerComponent","constructor","getSpinnerClass","classes","size","color","selectors","inputs","text","inline","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\loading-spinner\\loading-spinner.component.html","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\loading-spinner\\loading-spinner.component.ts"],"sourcesContent":["<div class=\"loading-container\" [ngClass]=\"{'inline-loading': inline}\">\r\n  <div [ngClass]=\"getSpinnerClass()\" role=\"status\">\r\n    <span class=\"visually-hidden\">{{ text }}</span>\r\n  </div>\r\n  <span *ngIf=\"text && !inline\" class=\"loading-text ms-2\">{{ text }}</span>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent {\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Input() color: 'primary' | 'secondary' | 'light' | 'dark' = 'primary';\r\n  @Input() text: string = 'Loading...';\r\n  @Input() inline: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  getSpinnerClass(): string {\r\n    let classes = 'spinner-border';\r\n    \r\n    if (this.size === 'sm') {\r\n      classes += ' spinner-border-sm';\r\n    }\r\n    \r\n    classes += ` text-${this.color}`;\r\n    \r\n    return classes;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}