{"ast":null,"code":"import { MessageType } from '../../models/message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/chat.service\";\nimport * as i3 from \"../../services/group.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../message/message.component\";\nimport * as i8 from \"../user-list/user-list.component\";\nconst _c0 = [\"messageArea\"];\nfunction ChatRoomComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"app-user-list\", 24);\n    i0.ɵɵlistener(\"userSelected\", function ChatRoomComponent_div_26_Template_app_user_list_userSelected_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onUserSelected($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"users\", ctx_r0.users)(\"selectedUser\", ctx_r0.selectedUser)(\"currentUser\", ctx_r0.currentUser);\n  }\n}\nfunction ChatRoomComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"app-group-list\", 25);\n    i0.ɵɵlistener(\"groupSelected\", function ChatRoomComponent_div_27_Template_app_group_list_groupSelected_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onGroupSelected($event));\n    })(\"createGroupClicked\", function ChatRoomComponent_div_27_Template_app_group_list_createGroupClicked_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onCreateGroupClick());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"showMyGroups\", true)(\"showAllGroups\", false);\n  }\n}\nfunction ChatRoomComponent_div_29_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41)(1, \"div\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"div\", 43);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"online\", ctx_r11.isOnline(ctx_r11.selectedUser));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.selectedUser.username.charAt(0).toUpperCase(), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"online\", ctx_r11.isOnline(ctx_r11.selectedUser));\n  }\n}\nfunction ChatRoomComponent_div_29_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"div\", 45);\n    i0.ɵɵelement(2, \"i\", 46);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatRoomComponent_div_29_i_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 47);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"text-success\", ctx_r13.isOnline(ctx_r13.selectedUser))(\"text-secondary\", !ctx_r13.isOnline(ctx_r13.selectedUser));\n  }\n}\nfunction ChatRoomComponent_div_29_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.isOnline(ctx_r14.selectedUser) ? \"Online\" : \"Offline\");\n  }\n}\nfunction ChatRoomComponent_div_29_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"i\", 48);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r15.selectedGroup.memberCount, \" member\", ctx_r15.selectedGroup.memberCount !== 1 ? \"s\" : \"\", \" \");\n  }\n}\nfunction ChatRoomComponent_div_29_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 49);\n    i0.ɵɵelement(1, \"i\", 50);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatRoomComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27)(2, \"div\", 28);\n    i0.ɵɵtemplate(3, ChatRoomComponent_div_29_div_3_Template, 4, 5, \"div\", 29);\n    i0.ɵɵtemplate(4, ChatRoomComponent_div_29_div_4_Template, 3, 0, \"div\", 30);\n    i0.ɵɵelementStart(5, \"div\")(6, \"h6\", 31);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"small\", 32);\n    i0.ɵɵtemplate(9, ChatRoomComponent_div_29_i_9_Template, 1, 4, \"i\", 33);\n    i0.ɵɵtemplate(10, ChatRoomComponent_div_29_span_10_Template, 2, 1, \"span\", 34);\n    i0.ɵɵtemplate(11, ChatRoomComponent_div_29_span_11_Template, 3, 2, \"span\", 34);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 35)(13, \"button\", 36);\n    i0.ɵɵelement(14, \"i\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, ChatRoomComponent_div_29_button_15_Template, 2, 0, \"button\", 38);\n    i0.ɵɵelementStart(16, \"button\", 39);\n    i0.ɵɵelement(17, \"i\", 40);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedGroup);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.getCurrentConversationName());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedGroup);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedGroup);\n  }\n}\nfunction ChatRoomComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51)(1, \"div\", 52);\n    i0.ɵɵelement(2, \"i\", 53);\n    i0.ɵɵelementStart(3, \"h3\");\n    i0.ɵɵtext(4, \"Welcome to Real-Time Chat!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 54);\n    i0.ɵɵtext(6, \"Select a user from the sidebar to start chatting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 55)(8, \"div\", 56);\n    i0.ɵɵelement(9, \"i\");\n    i0.ɵɵelementStart(10, \"span\", 57);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵclassMap(ctx_r3.connectionStatus ? \"fas fa-wifi text-success\" : \"fas fa-wifi-slash text-danger\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r3.getConnectionStatusClass());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getConnectionStatusText(), \" \");\n  }\n}\nfunction ChatRoomComponent_div_31_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 63)(1, \"div\", 64)(2, \"span\", 65);\n    i0.ɵɵtext(3, \"Loading messages...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\", 66);\n    i0.ɵɵtext(5, \"Loading conversation...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatRoomComponent_div_31_div_3_app_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-message\", 70);\n  }\n  if (rf & 2) {\n    const message_r23 = ctx.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"message\", message_r23)(\"currentUser\", ctx_r21.currentUser)(\"isGroupChat\", false);\n  }\n}\nfunction ChatRoomComponent_div_31_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 71)(1, \"div\", 52);\n    i0.ɵɵelement(2, \"i\", 72);\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No messages yet. Start the conversation!\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ChatRoomComponent_div_31_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵtemplate(1, ChatRoomComponent_div_31_div_3_app_message_1_Template, 1, 3, \"app-message\", 68);\n    i0.ɵɵtemplate(2, ChatRoomComponent_div_31_div_3_div_2_Template, 5, 0, \"div\", 69);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r19.messages)(\"ngForTrackBy\", ctx_r19.trackByMessageId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.messages.length === 0);\n  }\n}\nfunction ChatRoomComponent_div_31_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 73)(1, \"div\", 74);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"small\", 75);\n    i0.ɵɵtext(6, \"You are typing...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatRoomComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58, 59);\n    i0.ɵɵtemplate(2, ChatRoomComponent_div_31_div_2_Template, 6, 0, \"div\", 60);\n    i0.ɵɵtemplate(3, ChatRoomComponent_div_31_div_3_Template, 3, 3, \"div\", 61);\n    i0.ɵɵtemplate(4, ChatRoomComponent_div_31_div_4_Template, 7, 0, \"div\", 62);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isTyping);\n  }\n}\nfunction ChatRoomComponent_div_32_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 82)(1, \"small\", 32);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r24.newMessage.length, \"/1000\");\n  }\n}\nfunction ChatRoomComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 76)(1, \"div\", 77)(2, \"input\", 78);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatRoomComponent_div_32_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.newMessage = $event);\n    })(\"input\", function ChatRoomComponent_div_32_Template_input_input_2_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onMessageInput());\n    })(\"keypress\", function ChatRoomComponent_div_32_Template_input_keypress_2_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onKeyPress($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 79);\n    i0.ɵɵlistener(\"click\", function ChatRoomComponent_div_32_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.sendMessage());\n    });\n    i0.ɵɵelement(4, \"i\", 80);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, ChatRoomComponent_div_32_div_5_Template, 3, 1, \"div\", 81);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newMessage)(\"disabled\", !ctx_r5.selectedUser || !ctx_r5.connectionStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r5.newMessage.trim() || !ctx_r5.selectedUser || !ctx_r5.connectionStatus);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.newMessage.length > 800);\n  }\n}\nexport class ChatRoomComponent {\n  constructor(authService, chatService, groupService, router) {\n    this.authService = authService;\n    this.chatService = chatService;\n    this.groupService = groupService;\n    this.router = router;\n    this.currentUser = null;\n    this.users = [];\n    this.groups = [];\n    this.messages = [];\n    this.newMessage = '';\n    this.selectedUser = null;\n    this.selectedGroup = null;\n    this.loading = false;\n    this.connectionStatus = false;\n    this.isTyping = false;\n    // UI state\n    this.activeTab = 'users';\n    this.showGroupCreate = false;\n    this.subscriptions = [];\n    this.shouldScrollToBottom = false;\n  }\n  ngOnInit() {\n    this.currentUser = this.authService.getCurrentUser();\n    if (!this.currentUser) {\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.initializeChat();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.chatService.disconnect();\n  }\n  ngAfterViewChecked() {\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n  initializeChat() {\n    // Connect to WebSocket\n    this.chatService.connect();\n    // Subscribe to messages\n    const messagesSub = this.chatService.subscribeToMessages().subscribe({\n      next: message => {\n        // Only add messages for current conversation or system messages\n        if (this.isMessageForCurrentConversation(message)) {\n          this.messages.push(message);\n          this.shouldScrollToBottom = true;\n        }\n      },\n      error: error => {\n        console.error('Error receiving message:', error);\n      }\n    });\n    // Subscribe to user status updates\n    const userStatusSub = this.chatService.subscribeToUserStatus().subscribe({\n      next: users => {\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\n      },\n      error: error => {\n        console.error('Error receiving user status:', error);\n      }\n    });\n    // Subscribe to connection status\n    const connectionSub = this.chatService.getConnectionStatus().subscribe({\n      next: status => {\n        this.connectionStatus = status;\n      }\n    });\n    this.subscriptions.push(messagesSub, userStatusSub, connectionSub);\n    // Load initial data\n    this.loadUsers();\n    this.loadGroups();\n  }\n  loadUsers() {\n    this.authService.getUsers().subscribe({\n      next: users => {\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\n      },\n      error: error => {\n        console.error('Error loading users:', error);\n      }\n    });\n  }\n  loadGroups() {\n    this.groupService.getUserGroups().subscribe({\n      next: groups => {\n        this.groups = groups;\n      },\n      error: error => {\n        console.error('Error loading groups:', error);\n      }\n    });\n  }\n  onUserSelected(user) {\n    this.selectedUser = user;\n    this.selectedGroup = null; // Clear group selection\n    this.loadMessageHistory(user.id);\n  }\n  onGroupSelected(group) {\n    this.selectedGroup = group;\n    this.selectedUser = null; // Clear user selection\n    this.loadGroupMessageHistory(group.id);\n    // Subscribe to group messages\n    this.chatService.subscribeToGroup(group.id);\n  }\n  loadMessageHistory(userId) {\n    this.loading = true;\n    this.messages = []; // Clear current messages\n    this.authService.getMessageHistory(userId).subscribe({\n      next: messages => {\n        this.messages = messages;\n        this.loading = false;\n        this.shouldScrollToBottom = true;\n      },\n      error: error => {\n        console.error('Error loading message history:', error);\n        this.loading = false;\n      }\n    });\n  }\n  loadGroupMessageHistory(groupId) {\n    this.loading = true;\n    this.messages = []; // Clear current messages\n    this.authService.getGroupMessageHistory(groupId).subscribe({\n      next: messages => {\n        this.messages = messages;\n        this.loading = false;\n        this.shouldScrollToBottom = true;\n      },\n      error: error => {\n        console.error('Error loading group message history:', error);\n        this.loading = false;\n      }\n    });\n  }\n  sendMessage() {\n    if (this.newMessage.trim() && this.currentUser) {\n      const message = {\n        sender: this.currentUser,\n        content: this.newMessage.trim(),\n        type: MessageType.CHAT,\n        timestamp: new Date()\n      };\n      if (this.selectedGroup) {\n        // Send group message\n        message.groupId = this.selectedGroup.id;\n        this.chatService.sendGroupMessage(message, this.selectedGroup.id);\n      } else if (this.selectedUser) {\n        // Send private message\n        message.receiver = this.selectedUser;\n        this.chatService.sendMessage(message);\n      }\n      this.newMessage = '';\n      this.shouldScrollToBottom = true;\n    }\n  }\n  onKeyPress(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  scrollToBottom() {\n    try {\n      if (this.messageArea) {\n        this.messageArea.nativeElement.scrollTop = this.messageArea.nativeElement.scrollHeight;\n      }\n    } catch (err) {\n      console.error('Error scrolling to bottom:', err);\n    }\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n  isOnline(user) {\n    return user.status === 'ONLINE';\n  }\n  getStatusClass(user) {\n    return this.isOnline(user) ? 'user-status-online' : 'user-status-offline';\n  }\n  isMessageForCurrentConversation(message) {\n    // System messages (JOIN/LEAVE) should be shown based on context\n    if (message.type === MessageType.JOIN || message.type === MessageType.LEAVE) {\n      // Show system messages for the current group or general chat\n      if (this.selectedGroup && message.groupId === this.selectedGroup.id) {\n        return true;\n      }\n      // Show general system messages when in private chat\n      if (this.selectedUser && !message.groupId) {\n        return true;\n      }\n      return false;\n    }\n    // Group messages\n    if (message.groupId) {\n      return this.selectedGroup?.id === message.groupId;\n    }\n    // Private messages\n    if (!this.selectedUser || !this.currentUser) {\n      return false;\n    }\n    // Show messages between current user and selected user\n    return message.sender.id === this.currentUser.id && message.receiver?.id === this.selectedUser.id || message.sender.id === this.selectedUser.id && message.receiver?.id === this.currentUser.id;\n  }\n  onMessageInput() {\n    // Handle typing indicators here if needed\n    this.isTyping = this.newMessage.trim().length > 0;\n  }\n  getConnectionStatusText() {\n    return this.connectionStatus ? 'Connected' : 'Disconnected';\n  }\n  getConnectionStatusClass() {\n    return this.connectionStatus ? 'text-success' : 'text-danger';\n  }\n  trackByMessageId(index, message) {\n    return message.id || `${message.sender.id}-${message.timestamp.getTime()}`;\n  }\n  // Group functionality methods\n  switchToUsersTab() {\n    this.activeTab = 'users';\n    this.selectedGroup = null;\n  }\n  switchToGroupsTab() {\n    this.activeTab = 'groups';\n    this.selectedUser = null;\n  }\n  onCreateGroupClick() {\n    this.showGroupCreate = true;\n  }\n  onGroupCreated(group) {\n    this.showGroupCreate = false;\n    this.groups.push(group);\n    this.onGroupSelected(group);\n  }\n  onGroupCreateCancelled() {\n    this.showGroupCreate = false;\n  }\n  getCurrentConversationName() {\n    if (this.selectedGroup) {\n      return this.selectedGroup.name;\n    }\n    if (this.selectedUser) {\n      return this.selectedUser.username;\n    }\n    return 'Select a conversation';\n  }\n  isGroupConversation() {\n    return !!this.selectedGroup;\n  }\n  canSendMessage() {\n    return !!(this.selectedUser || this.selectedGroup);\n  }\n  static {\n    this.ɵfac = function ChatRoomComponent_Factory(t) {\n      return new (t || ChatRoomComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ChatService), i0.ɵɵdirectiveInject(i3.GroupService), i0.ɵɵdirectiveInject(i4.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatRoomComponent,\n      selectors: [[\"app-chat-room\"]],\n      viewQuery: function ChatRoomComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageArea = _t.first);\n        }\n      },\n      decls: 33,\n      vars: 16,\n      consts: [[1, \"container-fluid\", \"chat-container\"], [1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-primary\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"fas\", \"fa-comments\", \"me-2\"], [1, \"navbar-nav\", \"ms-auto\", \"d-flex\", \"align-items-center\"], [1, \"connection-indicator\", \"me-3\"], [1, \"navbar-text\", \"me-3\"], [1, \"fas\", \"fa-user\", \"me-1\"], [1, \"btn\", \"btn-outline-light\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-sign-out-alt\", \"me-1\"], [1, \"row\", \"g-0\", \"main-content\"], [1, \"col-md-3\", \"sidebar\"], [1, \"sidebar-tabs\"], [1, \"tab-button\", 3, \"click\"], [1, \"fas\", \"fa-user\", \"me-2\"], [1, \"fas\", \"fa-users\", \"me-2\"], [\"class\", \"tab-content\", 4, \"ngIf\"], [1, \"col-md-9\", \"chat-area\"], [\"class\", \"chat-header\", 4, \"ngIf\"], [\"class\", \"welcome-area\", 4, \"ngIf\"], [\"class\", \"message-area\", 4, \"ngIf\"], [\"class\", \"message-input\", 4, \"ngIf\"], [1, \"tab-content\"], [3, \"users\", \"selectedUser\", \"currentUser\", \"userSelected\"], [3, \"showMyGroups\", \"showAllGroups\", \"groupSelected\", \"createGroupClicked\"], [1, \"chat-header\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"d-flex\", \"align-items-center\"], [\"class\", \"user-avatar me-3\", 4, \"ngIf\"], [\"class\", \"group-avatar me-3\", 4, \"ngIf\"], [1, \"mb-0\"], [1, \"text-muted\"], [\"class\", \"fas fa-circle me-1\", 3, \"text-success\", \"text-secondary\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"chat-actions\"], [\"title\", \"Refresh messages\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", \"me-2\"], [1, \"fas\", \"fa-sync-alt\"], [\"class\", \"btn btn-sm btn-outline-secondary me-2\", \"title\", \"Group info\", 4, \"ngIf\"], [\"title\", \"Clear chat\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\"], [1, \"fas\", \"fa-trash\"], [1, \"user-avatar\", \"me-3\"], [1, \"avatar-circle\"], [1, \"status-indicator\"], [1, \"group-avatar\", \"me-3\"], [1, \"avatar-circle\", \"group\"], [1, \"fas\", \"fa-users\"], [1, \"fas\", \"fa-circle\", \"me-1\"], [1, \"fas\", \"fa-users\", \"me-1\"], [\"title\", \"Group info\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", \"me-2\"], [1, \"fas\", \"fa-info-circle\"], [1, \"welcome-area\"], [1, \"text-center\", \"text-muted\"], [1, \"fas\", \"fa-comments\", \"fa-4x\", \"mb-4\", \"text-primary\"], [1, \"lead\"], [1, \"mt-4\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"ms-2\"], [1, \"message-area\"], [\"messageArea\", \"\"], [\"class\", \"loading-state\", 4, \"ngIf\"], [\"class\", \"messages-container\", 4, \"ngIf\"], [\"class\", \"typing-indicator\", 4, \"ngIf\"], [1, \"loading-state\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"mt-2\", \"text-muted\"], [1, \"messages-container\"], [3, \"message\", \"currentUser\", \"isGroupChat\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"empty-messages\", 4, \"ngIf\"], [3, \"message\", \"currentUser\", \"isGroupChat\"], [1, \"empty-messages\"], [1, \"fas\", \"fa-comment-dots\", \"fa-2x\", \"mb-3\"], [1, \"typing-indicator\"], [1, \"typing-dots\"], [1, \"text-muted\", \"ms-2\"], [1, \"message-input\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Type your message...\", \"maxlength\", \"1000\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"input\", \"keypress\"], [\"type\", \"button\", \"title\", \"Send message\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"fas\", \"fa-paper-plane\"], [\"class\", \"character-counter\", 4, \"ngIf\"], [1, \"character-counter\"]],\n      template: function ChatRoomComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\", 1)(2, \"div\", 2)(3, \"a\", 3);\n          i0.ɵɵelement(4, \"i\", 4);\n          i0.ɵɵtext(5, \" Real-Time Chat \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6);\n          i0.ɵɵelement(8, \"i\");\n          i0.ɵɵelementStart(9, \"small\");\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"span\", 7);\n          i0.ɵɵelement(12, \"i\", 8);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function ChatRoomComponent_Template_button_click_14_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵelement(15, \"i\", 10);\n          i0.ɵɵtext(16, \"Logout \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(17, \"div\", 11)(18, \"div\", 12)(19, \"div\", 13)(20, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function ChatRoomComponent_Template_button_click_20_listener() {\n            return ctx.switchToUsersTab();\n          });\n          i0.ɵɵelement(21, \"i\", 15);\n          i0.ɵɵtext(22, \"Users \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function ChatRoomComponent_Template_button_click_23_listener() {\n            return ctx.switchToGroupsTab();\n          });\n          i0.ɵɵelement(24, \"i\", 16);\n          i0.ɵɵtext(25, \"Groups \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(26, ChatRoomComponent_div_26_Template, 2, 3, \"div\", 17);\n          i0.ɵɵtemplate(27, ChatRoomComponent_div_27_Template, 2, 2, \"div\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 18);\n          i0.ɵɵtemplate(29, ChatRoomComponent_div_29_Template, 18, 7, \"div\", 19);\n          i0.ɵɵtemplate(30, ChatRoomComponent_div_30_Template, 12, 5, \"div\", 20);\n          i0.ɵɵtemplate(31, ChatRoomComponent_div_31_Template, 5, 3, \"div\", 21);\n          i0.ɵɵtemplate(32, ChatRoomComponent_div_32_Template, 6, 4, \"div\", 22);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵclassMap(ctx.connectionStatus ? \"fas fa-circle text-success\" : \"fas fa-circle text-danger\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassMap(ctx.getConnectionStatusClass());\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.getConnectionStatusText());\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" Welcome, \", ctx.currentUser == null ? null : ctx.currentUser.username, \"! \");\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.activeTab === \"users\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"active\", ctx.activeTab === \"groups\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"users\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"groups\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedUser || ctx.selectedGroup);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedUser);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedUser);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedUser);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.MaxLengthValidator, i6.NgModel, i7.MessageComponent, i8.UserListComponent],\n      styles: [\".chat-container[_ngcontent-%COMP%] {\\r\\n  height: 100vh;\\r\\n  overflow: hidden;\\r\\n  background-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n.main-content[_ngcontent-%COMP%] {\\r\\n  height: calc(100vh - 56px);\\r\\n}\\r\\n\\r\\n.sidebar[_ngcontent-%COMP%] {\\r\\n  background-color: #ffffff;\\r\\n  border-right: 1px solid #dee2e6;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.chat-area[_ngcontent-%COMP%] {\\r\\n  background-color: #ffffff;\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.chat-header[_ngcontent-%COMP%] {\\r\\n  padding: 1rem;\\r\\n  border-bottom: 1px solid #dee2e6;\\r\\n  background-color: #ffffff;\\r\\n  flex-shrink: 0;\\r\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.user-avatar[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  flex-shrink: 0;\\r\\n}\\r\\n\\r\\n.avatar-circle[_ngcontent-%COMP%] {\\r\\n  width: 45px;\\r\\n  height: 45px;\\r\\n  border-radius: 50%;\\r\\n  background: linear-gradient(135deg, #007bff, #0056b3);\\r\\n  color: white;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-weight: bold;\\r\\n  font-size: 18px;\\r\\n  position: relative;\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n\\r\\n.avatar-circle.online[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.3);\\r\\n}\\r\\n\\r\\n.status-indicator[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  bottom: -2px;\\r\\n  right: -2px;\\r\\n  width: 14px;\\r\\n  height: 14px;\\r\\n  border-radius: 50%;\\r\\n  border: 3px solid #ffffff;\\r\\n  background-color: #6c757d;\\r\\n  transition: background-color 0.2s ease;\\r\\n}\\r\\n\\r\\n.status-indicator.online[_ngcontent-%COMP%] {\\r\\n  background-color: #28a745;\\r\\n  animation: _ngcontent-%COMP%_pulse 2s infinite;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_pulse {\\r\\n  0% {\\r\\n    box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7);\\r\\n  }\\r\\n\\r\\n  70% {\\r\\n    box-shadow: 0 0 0 6px rgba(40, 167, 69, 0);\\r\\n  }\\r\\n\\r\\n  100% {\\r\\n    box-shadow: 0 0 0 0 rgba(40, 167, 69, 0);\\r\\n  }\\r\\n}\\r\\n\\r\\n.user-status-online[_ngcontent-%COMP%] {\\r\\n  color: #28a745;\\r\\n}\\r\\n\\r\\n.user-status-offline[_ngcontent-%COMP%] {\\r\\n  color: #6c757d;\\r\\n}\\r\\n\\r\\n.chat-actions[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\r\\n  border-radius: 50%;\\r\\n  width: 35px;\\r\\n  height: 35px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.welcome-area[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\r\\n}\\r\\n\\r\\n.message-area[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  overflow-y: auto;\\r\\n  padding: 1rem;\\r\\n  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.loading-state[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.messages-container[_ngcontent-%COMP%] {\\r\\n  min-height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.empty-messages[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.typing-indicator[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding: 0.5rem 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.typing-dots[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.typing-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n  width: 8px;\\r\\n  height: 8px;\\r\\n  border-radius: 50%;\\r\\n  background-color: #007bff;\\r\\n  margin: 0 2px;\\r\\n  animation: _ngcontent-%COMP%_typing 1.4s infinite ease-in-out;\\r\\n}\\r\\n\\r\\n.typing-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1) {\\r\\n  animation-delay: -0.32s;\\r\\n}\\r\\n\\r\\n.typing-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2) {\\r\\n  animation-delay: -0.16s;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_typing {\\r\\n\\r\\n  0%,\\r\\n  80%,\\r\\n  100% {\\r\\n    transform: scale(0.8);\\r\\n    opacity: 0.5;\\r\\n  }\\r\\n\\r\\n  40% {\\r\\n    transform: scale(1);\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.message-input[_ngcontent-%COMP%] {\\r\\n  border-top: 1px solid #dee2e6;\\r\\n  padding: 1rem;\\r\\n  background-color: #ffffff;\\r\\n  flex-shrink: 0;\\r\\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\r\\n  border-radius: 25px 0 0 25px;\\r\\n  border-right: none;\\r\\n  padding: 0.75rem 1rem;\\r\\n  font-size: 0.95rem;\\r\\n}\\r\\n\\r\\n.input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\r\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\r\\n  border-color: #007bff;\\r\\n}\\r\\n\\r\\n.input-group[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\r\\n  border-radius: 0 25px 25px 0;\\r\\n  border-left: none;\\r\\n  padding: 0.75rem 1.25rem;\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n\\r\\n.input-group[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\r\\n  transform: translateY(-1px);\\r\\n  box-shadow: 0 2px 4px rgba(0, 123, 255, 0.3);\\r\\n}\\r\\n\\r\\n.character-counter[_ngcontent-%COMP%] {\\r\\n  text-align: right;\\r\\n  margin-top: 0.25rem;\\r\\n}\\r\\n\\r\\n.connection-indicator[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  font-size: 0.875rem;\\r\\n}\\r\\n\\r\\n.connection-indicator[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\r\\n  margin-right: 0.25rem;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n\\r\\n.message-area[_ngcontent-%COMP%]::-webkit-scrollbar {\\r\\n  width: 6px;\\r\\n}\\r\\n\\r\\n.message-area[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\n.message-area[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\r\\n  background: #c1c1c1;\\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n.message-area[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\r\\n  background: #a8a8a8;\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .sidebar[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    left: -100%;\\r\\n    width: 100%;\\r\\n    z-index: 1000;\\r\\n    transition: left 0.3s ease;\\r\\n  }\\r\\n\\r\\n  .sidebar.show[_ngcontent-%COMP%] {\\r\\n    left: 0;\\r\\n  }\\r\\n\\r\\n  .chat-area[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .chat-header[_ngcontent-%COMP%] {\\r\\n    padding: 0.75rem;\\r\\n  }\\r\\n\\r\\n  .avatar-circle[_ngcontent-%COMP%] {\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n\\r\\n  .status-indicator[_ngcontent-%COMP%] {\\r\\n    width: 12px;\\r\\n    height: 12px;\\r\\n    border-width: 2px;\\r\\n  }\\r\\n\\r\\n  .message-input[_ngcontent-%COMP%] {\\r\\n    padding: 0.75rem;\\r\\n  }\\r\\n\\r\\n  .input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%], .input-group[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\r\\n    padding: 0.6rem 0.9rem;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.chat-area[_ngcontent-%COMP%] {\\r\\n  animation: _ngcontent-%COMP%_fadeIn 0.3s ease-in;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_fadeIn {\\r\\n  from {\\r\\n    opacity: 0;\\r\\n    transform: translateY(10px);\\r\\n  }\\r\\n\\r\\n  to {\\r\\n    opacity: 1;\\r\\n    transform: translateY(0);\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["MessageType","i0","ChatRoomComponent","constructor","authService","chatService","groupService","router","ngOnInit","currentUser","getCurrentUser","navigate","initializeChat","ngOnDestroy","subscriptions","forEach","sub","unsubscribe","disconnect","ngAfterViewChecked","shouldScrollToBottom","scrollToBottom","connect","messagesSub","subscribeToMessages","subscribe","next","message","isMessageForCurrentConversation","messages","push","error","console","userStatusSub","subscribeToUserStatus","users","filter","user","id","connectionSub","getConnectionStatus","status","connectionStatus","loadUsers","loadGroups","getUsers","getUserGroups","groups","onUserSelected","selectedUser","selectedGroup","loadMessageHistory","onGroupSelected","group","loadGroupMessageHistory","subscribeToGroup","userId","loading","getMessageHistory","groupId","getGroupMessageHistory","sendMessage","newMessage","trim","sender","content","type","CHAT","timestamp","Date","sendGroupMessage","receiver","onKeyPress","event","key","shiftKey","preventDefault","messageArea","nativeElement","scrollTop","scrollHeight","err","logout","isOnline","getStatusClass","JOIN","LEAVE","onMessageInput","isTyping","length","getConnectionStatusText","getConnectionStatusClass","trackByMessageId","index","getTime","switchToUsersTab","activeTab","switchToGroupsTab","onCreateGroupClick","showGroupCreate","onGroupCreated","onGroupCreateCancelled","getCurrentConversationName","name","username","isGroupConversation","canSendMessage","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\chat-room\\chat-room.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\chat-room\\chat-room.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { GroupService } from '../../services/group.service';\r\nimport { User } from '../../models/user.model';\r\nimport { Message, MessageType } from '../../models/message.model';\r\nimport { Group } from '../../models/group.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-chat-room',\r\n  templateUrl: './chat-room.component.html',\r\n  styleUrls: ['./chat-room.component.css']\r\n})\r\nexport class ChatRoomComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  @ViewChild('messageArea') private messageArea!: ElementRef;\r\n  currentUser: User | null = null;\r\n  users: User[] = [];\r\n  groups: Group[] = [];\r\n  messages: Message[] = [];\r\n  newMessage = '';\r\n  selectedUser: User | null = null;\r\n  selectedGroup: Group | null = null;\r\n  loading = false;\r\n  connectionStatus = false;\r\n  isTyping = false;\r\n  \r\n  // UI state\r\n  activeTab: 'users' | 'groups' = 'users';\r\n  showGroupCreate = false;\r\n  \r\n  private subscriptions: Subscription[] = [];\r\n  private shouldScrollToBottom = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private chatService: ChatService,\r\n    private groupService: GroupService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    if (!this.currentUser) {\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    this.initializeChat();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    this.chatService.disconnect();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.shouldScrollToBottom) {\r\n      this.scrollToBottom();\r\n      this.shouldScrollToBottom = false;\r\n    }\r\n  }\r\n\r\n  private initializeChat(): void {\r\n    // Connect to WebSocket\r\n    this.chatService.connect();\r\n\r\n    // Subscribe to messages\r\n    const messagesSub = this.chatService.subscribeToMessages().subscribe({\r\n      next: (message: Message) => {\r\n        // Only add messages for current conversation or system messages\r\n        if (this.isMessageForCurrentConversation(message)) {\r\n          this.messages.push(message);\r\n          this.shouldScrollToBottom = true;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error receiving message:', error);\r\n      }\r\n    });\r\n\r\n    // Subscribe to user status updates\r\n    const userStatusSub = this.chatService.subscribeToUserStatus().subscribe({\r\n      next: (users: User[]) => {\r\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error receiving user status:', error);\r\n      }\r\n    });\r\n\r\n    // Subscribe to connection status\r\n    const connectionSub = this.chatService.getConnectionStatus().subscribe({\r\n      next: (status: boolean) => {\r\n        this.connectionStatus = status;\r\n      }\r\n    });\r\n\r\n    this.subscriptions.push(messagesSub, userStatusSub, connectionSub);\r\n\r\n    // Load initial data\r\n    this.loadUsers();\r\n    this.loadGroups();\r\n  }\r\n\r\n  private loadUsers(): void {\r\n    this.authService.getUsers().subscribe({\r\n      next: (users: User[]) => {\r\n        this.users = users.filter(user => user.id !== this.currentUser?.id);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading users:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadGroups(): void {\r\n    this.groupService.getUserGroups().subscribe({\r\n      next: (groups: Group[]) => {\r\n        this.groups = groups;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading groups:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onUserSelected(user: User): void {\r\n    this.selectedUser = user;\r\n    this.selectedGroup = null; // Clear group selection\r\n    this.loadMessageHistory(user.id);\r\n  }\r\n\r\n  onGroupSelected(group: Group): void {\r\n    this.selectedGroup = group;\r\n    this.selectedUser = null; // Clear user selection\r\n    this.loadGroupMessageHistory(group.id);\r\n    // Subscribe to group messages\r\n    this.chatService.subscribeToGroup(group.id);\r\n  }\r\n\r\n  private loadMessageHistory(userId: number): void {\r\n    this.loading = true;\r\n    this.messages = []; // Clear current messages\r\n    \r\n    this.authService.getMessageHistory(userId).subscribe({\r\n      next: (messages: Message[]) => {\r\n        this.messages = messages;\r\n        this.loading = false;\r\n        this.shouldScrollToBottom = true;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading message history:', error);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadGroupMessageHistory(groupId: string): void {\r\n    this.loading = true;\r\n    this.messages = []; // Clear current messages\r\n    \r\n    this.authService.getGroupMessageHistory(groupId).subscribe({\r\n      next: (messages: Message[]) => {\r\n        this.messages = messages;\r\n        this.loading = false;\r\n        this.shouldScrollToBottom = true;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading group message history:', error);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage(): void {\r\n    if (this.newMessage.trim() && this.currentUser) {\r\n      const message: Message = {\r\n        sender: this.currentUser,\r\n        content: this.newMessage.trim(),\r\n        type: MessageType.CHAT,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      if (this.selectedGroup) {\r\n        // Send group message\r\n        message.groupId = this.selectedGroup.id;\r\n        this.chatService.sendGroupMessage(message, this.selectedGroup.id);\r\n      } else if (this.selectedUser) {\r\n        // Send private message\r\n        message.receiver = this.selectedUser;\r\n        this.chatService.sendMessage(message);\r\n      }\r\n\r\n      this.newMessage = '';\r\n      this.shouldScrollToBottom = true;\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: KeyboardEvent): void {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      this.sendMessage();\r\n    }\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    try {\r\n      if (this.messageArea) {\r\n        this.messageArea.nativeElement.scrollTop = this.messageArea.nativeElement.scrollHeight;\r\n      }\r\n    } catch (err) {\r\n      console.error('Error scrolling to bottom:', err);\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isOnline(user: User): boolean {\r\n    return user.status === 'ONLINE';\r\n  }\r\n\r\n  getStatusClass(user: User): string {\r\n    return this.isOnline(user) ? 'user-status-online' : 'user-status-offline';\r\n  }\r\n\r\n  private isMessageForCurrentConversation(message: Message): boolean {\r\n    // System messages (JOIN/LEAVE) should be shown based on context\r\n    if (message.type === MessageType.JOIN || message.type === MessageType.LEAVE) {\r\n      // Show system messages for the current group or general chat\r\n      if (this.selectedGroup && message.groupId === this.selectedGroup.id) {\r\n        return true;\r\n      }\r\n      // Show general system messages when in private chat\r\n      if (this.selectedUser && !message.groupId) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // Group messages\r\n    if (message.groupId) {\r\n      return this.selectedGroup?.id === message.groupId;\r\n    }\r\n\r\n    // Private messages\r\n    if (!this.selectedUser || !this.currentUser) {\r\n      return false;\r\n    }\r\n\r\n    // Show messages between current user and selected user\r\n    return (\r\n      (message.sender.id === this.currentUser.id && message.receiver?.id === this.selectedUser.id) ||\r\n      (message.sender.id === this.selectedUser.id && message.receiver?.id === this.currentUser.id)\r\n    );\r\n  }\r\n\r\n  onMessageInput(): void {\r\n    // Handle typing indicators here if needed\r\n    this.isTyping = this.newMessage.trim().length > 0;\r\n  }\r\n\r\n  getConnectionStatusText(): string {\r\n    return this.connectionStatus ? 'Connected' : 'Disconnected';\r\n  }\r\n\r\n  getConnectionStatusClass(): string {\r\n    return this.connectionStatus ? 'text-success' : 'text-danger';\r\n  }\r\n\r\n  trackByMessageId(index: number, message: Message): number | string {\r\n    return message.id || `${message.sender.id}-${message.timestamp.getTime()}`;\r\n  }\r\n\r\n  // Group functionality methods\r\n  switchToUsersTab(): void {\r\n    this.activeTab = 'users';\r\n    this.selectedGroup = null;\r\n  }\r\n\r\n  switchToGroupsTab(): void {\r\n    this.activeTab = 'groups';\r\n    this.selectedUser = null;\r\n  }\r\n\r\n  onCreateGroupClick(): void {\r\n    this.showGroupCreate = true;\r\n  }\r\n\r\n  onGroupCreated(group: Group): void {\r\n    this.showGroupCreate = false;\r\n    this.groups.push(group);\r\n    this.onGroupSelected(group);\r\n  }\r\n\r\n  onGroupCreateCancelled(): void {\r\n    this.showGroupCreate = false;\r\n  }\r\n\r\n  getCurrentConversationName(): string {\r\n    if (this.selectedGroup) {\r\n      return this.selectedGroup.name;\r\n    }\r\n    if (this.selectedUser) {\r\n      return this.selectedUser.username;\r\n    }\r\n    return 'Select a conversation';\r\n  }\r\n\r\n  isGroupConversation(): boolean {\r\n    return !!this.selectedGroup;\r\n  }\r\n\r\n  canSendMessage(): boolean {\r\n    return !!(this.selectedUser || this.selectedGroup);\r\n  }\r\n}","<div class=\"container-fluid chat-container\">\r\n  <!-- Navigation Bar -->\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">\r\n        <i class=\"fas fa-comments me-2\"></i>\r\n        Real-Time Chat\r\n      </a>\r\n      <div class=\"navbar-nav ms-auto d-flex align-items-center\">\r\n        <!-- Connection Status -->\r\n        <div class=\"connection-indicator me-3\">\r\n          <i [class]=\"connectionStatus ? 'fas fa-circle text-success' : 'fas fa-circle text-danger'\"></i>\r\n          <small [class]=\"getConnectionStatusClass()\">{{ getConnectionStatusText() }}</small>\r\n        </div>\r\n        \r\n        <!-- User Info -->\r\n        <span class=\"navbar-text me-3\">\r\n          <i class=\"fas fa-user me-1\"></i>\r\n          Welcome, {{ currentUser?.username }}!\r\n        </span>\r\n        \r\n        <!-- Logout Button -->\r\n        <button class=\"btn btn-outline-light btn-sm\" (click)=\"logout()\">\r\n          <i class=\"fas fa-sign-out-alt me-1\"></i>Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"row g-0 main-content\">\r\n    <!-- Sidebar -->\r\n    <div class=\"col-md-3 sidebar\">\r\n      <!-- Tab Navigation -->\r\n      <div class=\"sidebar-tabs\">\r\n        <button \r\n          class=\"tab-button\"\r\n          [class.active]=\"activeTab === 'users'\"\r\n          (click)=\"switchToUsersTab()\">\r\n          <i class=\"fas fa-user me-2\"></i>Users\r\n        </button>\r\n        <button \r\n          class=\"tab-button\"\r\n          [class.active]=\"activeTab === 'groups'\"\r\n          (click)=\"switchToGroupsTab()\">\r\n          <i class=\"fas fa-users me-2\"></i>Groups\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Users Tab -->\r\n      <div *ngIf=\"activeTab === 'users'\" class=\"tab-content\">\r\n        <app-user-list\r\n          [users]=\"users\"\r\n          [selectedUser]=\"selectedUser\"\r\n          [currentUser]=\"currentUser\"\r\n          (userSelected)=\"onUserSelected($event)\">\r\n        </app-user-list>\r\n      </div>\r\n\r\n      <!-- Groups Tab -->\r\n      <div *ngIf=\"activeTab === 'groups'\" class=\"tab-content\">\r\n        <app-group-list\r\n          [showMyGroups]=\"true\"\r\n          [showAllGroups]=\"false\"\r\n          (groupSelected)=\"onGroupSelected($event)\"\r\n          (createGroupClicked)=\"onCreateGroupClick()\">\r\n        </app-group-list>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Chat Area -->\r\n    <div class=\"col-md-9 chat-area\">\r\n      <!-- Chat Header -->\r\n      <div class=\"chat-header\" *ngIf=\"selectedUser || selectedGroup\">\r\n        <div class=\"d-flex align-items-center justify-content-between\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <!-- User Avatar -->\r\n            <div *ngIf=\"selectedUser\" class=\"user-avatar me-3\">\r\n              <div class=\"avatar-circle\" [class.online]=\"isOnline(selectedUser)\">\r\n                {{ selectedUser.username.charAt(0).toUpperCase() }}\r\n                <div class=\"status-indicator\" [class.online]=\"isOnline(selectedUser)\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Group Avatar -->\r\n            <div *ngIf=\"selectedGroup\" class=\"group-avatar me-3\">\r\n              <div class=\"avatar-circle group\">\r\n                <i class=\"fas fa-users\"></i>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h6 class=\"mb-0\">{{ getCurrentConversationName() }}</h6>\r\n              <small class=\"text-muted\">\r\n                <i *ngIf=\"selectedUser\" class=\"fas fa-circle me-1\" [class.text-success]=\"isOnline(selectedUser)\" [class.text-secondary]=\"!isOnline(selectedUser)\"></i>\r\n                <span *ngIf=\"selectedUser\">{{ isOnline(selectedUser) ? 'Online' : 'Offline' }}</span>\r\n                <span *ngIf=\"selectedGroup\">\r\n                  <i class=\"fas fa-users me-1\"></i>\r\n                  {{ selectedGroup.memberCount }} member{{ selectedGroup.memberCount !== 1 ? 's' : '' }}\r\n                </span>\r\n              </small>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Chat Actions -->\r\n          <div class=\"chat-actions\">\r\n            <button class=\"btn btn-sm btn-outline-secondary me-2\" title=\"Refresh messages\">\r\n              <i class=\"fas fa-sync-alt\"></i>\r\n            </button>\r\n            <button *ngIf=\"selectedGroup\" class=\"btn btn-sm btn-outline-secondary me-2\" title=\"Group info\">\r\n              <i class=\"fas fa-info-circle\"></i>\r\n            </button>\r\n            <button class=\"btn btn-sm btn-outline-secondary\" title=\"Clear chat\">\r\n              <i class=\"fas fa-trash\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Welcome Message -->\r\n      <div *ngIf=\"!selectedUser\" class=\"welcome-area\">\r\n        <div class=\"text-center text-muted\">\r\n          <i class=\"fas fa-comments fa-4x mb-4 text-primary\"></i>\r\n          <h3>Welcome to Real-Time Chat!</h3>\r\n          <p class=\"lead\">Select a user from the sidebar to start chatting</p>\r\n          <div class=\"mt-4\">\r\n            <div class=\"d-flex justify-content-center align-items-center\">\r\n              <i [class]=\"connectionStatus ? 'fas fa-wifi text-success' : 'fas fa-wifi-slash text-danger'\"></i>\r\n              <span class=\"ms-2\" [class]=\"getConnectionStatusClass()\">\r\n                {{ getConnectionStatusText() }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages Area -->\r\n      <div *ngIf=\"selectedUser\" class=\"message-area\" #messageArea>\r\n        <!-- Loading State -->\r\n        <div *ngIf=\"loading\" class=\"loading-state\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading messages...</span>\r\n          </div>\r\n          <p class=\"mt-2 text-muted\">Loading conversation...</p>\r\n        </div>\r\n\r\n        <!-- Messages -->\r\n        <div *ngIf=\"!loading\" class=\"messages-container\">\r\n          <app-message\r\n            *ngFor=\"let message of messages; trackBy: trackByMessageId\"\r\n            [message]=\"message\"\r\n            [currentUser]=\"currentUser!\"\r\n            [isGroupChat]=\"false\">\r\n          </app-message>\r\n\r\n          <!-- Empty State -->\r\n          <div *ngIf=\"messages.length === 0\" class=\"empty-messages\">\r\n            <div class=\"text-center text-muted\">\r\n              <i class=\"fas fa-comment-dots fa-2x mb-3\"></i>\r\n              <p>No messages yet. Start the conversation!</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Typing Indicator -->\r\n        <div *ngIf=\"isTyping\" class=\"typing-indicator\">\r\n          <div class=\"typing-dots\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <small class=\"text-muted ms-2\">You are typing...</small>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Message Input -->\r\n      <div *ngIf=\"selectedUser\" class=\"message-input\">\r\n        <div class=\"input-group\">\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control\" \r\n            [(ngModel)]=\"newMessage\"\r\n            (input)=\"onMessageInput()\"\r\n            (keypress)=\"onKeyPress($event)\"\r\n            placeholder=\"Type your message...\"\r\n            [disabled]=\"!selectedUser || !connectionStatus\"\r\n            maxlength=\"1000\">\r\n          <button \r\n            class=\"btn btn-primary\" \r\n            type=\"button\" \r\n            (click)=\"sendMessage()\"\r\n            [disabled]=\"!newMessage.trim() || !selectedUser || !connectionStatus\"\r\n            title=\"Send message\">\r\n            <i class=\"fas fa-paper-plane\"></i>\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Character Counter -->\r\n        <div class=\"character-counter\" *ngIf=\"newMessage.length > 800\">\r\n          <small class=\"text-muted\">{{ newMessage.length }}/1000</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}