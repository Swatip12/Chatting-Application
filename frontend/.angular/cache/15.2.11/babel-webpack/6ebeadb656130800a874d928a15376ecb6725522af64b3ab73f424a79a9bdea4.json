{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/loading.service\";\nimport * as i2 from \"@angular/common\";\nfunction GlobalLoadingComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"span\", 4);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"strong\");\n    i0.ɵɵtext(7, \"Processing...\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class GlobalLoadingComponent {\n  constructor(loadingService) {\n    this.loadingService = loadingService;\n    this.isLoading = false;\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.subscription = this.loadingService.getLoadingState().subscribe(loading => {\n      this.isLoading = loading;\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  static {\n    this.ɵfac = function GlobalLoadingComponent_Factory(t) {\n      return new (t || GlobalLoadingComponent)(i0.ɵɵdirectiveInject(i1.LoadingService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GlobalLoadingComponent,\n      selectors: [[\"app-global-loading\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"global-loading-overlay\", 4, \"ngIf\"], [1, \"global-loading-overlay\"], [1, \"global-loading-content\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"mt-3\"]],\n      template: function GlobalLoadingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, GlobalLoadingComponent_div_0_Template, 8, 0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgIf],\n      styles: [\".global-loading-overlay[_ngcontent-%COMP%] {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgba(0, 0, 0, 0.5);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  z-index: 9999;\\r\\n}\\r\\n\\r\\n.global-loading-content[_ngcontent-%COMP%] {\\r\\n  background: white;\\r\\n  padding: 2rem;\\r\\n  border-radius: 8px;\\r\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n  text-align: center;\\r\\n  min-width: 200px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nbG9iYWwtbG9hZGluZy9nbG9iYWwtbG9hZGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixPQUFPO0VBQ1AsV0FBVztFQUNYLFlBQVk7RUFDWixvQ0FBb0M7RUFDcEMsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsd0NBQXdDO0VBQ3hDLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZ2xvYmFsLWxvYWRpbmctb3ZlcmxheSB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHotaW5kZXg6IDk5OTk7XHJcbn1cclxuXHJcbi5nbG9iYWwtbG9hZGluZy1jb250ZW50IHtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBwYWRkaW5nOiAycmVtO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtaW4td2lkdGg6IDIwMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,MAAM;;;;;;ICDnCC,8BAAsD;IAGlBA,0BAAU;IAAAA,iBAAO;IAEjDA,8BAAkB;IACRA,6BAAa;IAAAA,iBAAS;;;ADGpC,OAAM,MAAOC,sBAAsB;EAIjCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,cAAS,GAAG,KAAK;IACT,iBAAY,GAAiB,IAAIJ,YAAY,EAAE;EAEF;EAErDK,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,cAAc,CAACG,eAAe,EAAE,CAACC,SAAS,CACjEC,OAAO,IAAG;MACR,IAAI,CAACC,SAAS,GAAGD,OAAO;IAC1B,CAAC,CACF;EACH;EAEAE,WAAW;IACT,IAAI,CAACL,YAAY,CAACM,WAAW,EAAE;EACjC;;;uBAhBWV,sBAAsB;IAAA;EAAA;;;YAAtBA,sBAAsB;MAAAW;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCTnChB,uEASM;;;UATAA,oCAAe","names":["Subscription","i0","GlobalLoadingComponent","constructor","loadingService","ngOnInit","subscription","getLoadingState","subscribe","loading","isLoading","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\global-loading\\global-loading.component.ts","C:\\Users\\swatip\\Documents\\FSD Projects\\Chatting-Application\\frontend\\src\\app\\components\\global-loading\\global-loading.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoadingService } from '../../services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-global-loading',\r\n  templateUrl: './global-loading.component.html',\r\n  styleUrls: ['./global-loading.component.css']\r\n})\r\nexport class GlobalLoadingComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(private loadingService: LoadingService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.loadingService.getLoadingState().subscribe(\r\n      loading => {\r\n        this.isLoading = loading;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}","<div *ngIf=\"isLoading\" class=\"global-loading-overlay\">\r\n  <div class=\"global-loading-content\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n    <div class=\"mt-3\">\r\n      <strong>Processing...</strong>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}